// Code generated by protoc-gen-go. DO NOT EDIT.
// source: KuplungAppSettings.proto

package saveopen

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GUISettings struct {
	ShowCube                           *bool           `protobuf:"varint,1,req,name=ShowCube" json:"ShowCube,omitempty"`
	Fov                                *float32        `protobuf:"fixed32,2,req,name=Fov" json:"Fov,omitempty"`
	RatioWidth                         *float32        `protobuf:"fixed32,3,req,name=RatioWidth" json:"RatioWidth,omitempty"`
	RatioHeight                        *float32        `protobuf:"fixed32,4,req,name=RatioHeight" json:"RatioHeight,omitempty"`
	PlaneClose                         *float32        `protobuf:"fixed32,5,req,name=PlaneClose" json:"PlaneClose,omitempty"`
	PlaneFar                           *float32        `protobuf:"fixed32,6,req,name=PlaneFar" json:"PlaneFar,omitempty"`
	GammaCoeficient                    *float32        `protobuf:"fixed32,7,req,name=GammaCoeficient" json:"GammaCoeficient,omitempty"`
	ShowPickRays                       *bool           `protobuf:"varint,8,req,name=ShowPickRays" json:"ShowPickRays,omitempty"`
	ShowPickRaysSingle                 *bool           `protobuf:"varint,9,req,name=ShowPickRaysSingle" json:"ShowPickRaysSingle,omitempty"`
	RayAnimate                         *bool           `protobuf:"varint,10,req,name=RayAnimate" json:"RayAnimate,omitempty"`
	RayOriginX                         *float32        `protobuf:"fixed32,11,req,name=RayOriginX" json:"RayOriginX,omitempty"`
	RayOriginY                         *float32        `protobuf:"fixed32,12,req,name=RayOriginY" json:"RayOriginY,omitempty"`
	RayOriginZ                         *float32        `protobuf:"fixed32,13,req,name=RayOriginZ" json:"RayOriginZ,omitempty"`
	RayOriginXS                        *string         `protobuf:"bytes,14,req,name=RayOriginXS" json:"RayOriginXS,omitempty"`
	RayOriginYS                        *string         `protobuf:"bytes,15,req,name=RayOriginYS" json:"RayOriginYS,omitempty"`
	RayOriginZS                        *string         `protobuf:"bytes,16,req,name=RayOriginZS" json:"RayOriginZS,omitempty"`
	RayDraw                            *bool           `protobuf:"varint,17,req,name=RayDraw" json:"RayDraw,omitempty"`
	RayDirectionX                      *float32        `protobuf:"fixed32,18,req,name=RayDirectionX" json:"RayDirectionX,omitempty"`
	RayDirectionY                      *float32        `protobuf:"fixed32,19,req,name=RayDirectionY" json:"RayDirectionY,omitempty"`
	RayDirectionZ                      *float32        `protobuf:"fixed32,20,req,name=RayDirectionZ" json:"RayDirectionZ,omitempty"`
	RayDirectionXS                     *string         `protobuf:"bytes,21,req,name=RayDirectionXS" json:"RayDirectionXS,omitempty"`
	RayDirectionYS                     *string         `protobuf:"bytes,22,req,name=RayDirectionYS" json:"RayDirectionYS,omitempty"`
	RayDirectionZS                     *string         `protobuf:"bytes,23,req,name=RayDirectionZS" json:"RayDirectionZS,omitempty"`
	OcclusionCulling                   *bool           `protobuf:"varint,24,req,name=OcclusionCulling" json:"OcclusionCulling,omitempty"`
	RenderingDepth                     *bool           `protobuf:"varint,25,req,name=RenderingDepth" json:"RenderingDepth,omitempty"`
	SelectedViewModelSkin              *uint32         `protobuf:"varint,26,req,name=SelectedViewModelSkin" json:"SelectedViewModelSkin,omitempty"`
	ShowBoundingBox                    *bool           `protobuf:"varint,27,req,name=ShowBoundingBox" json:"ShowBoundingBox,omitempty"`
	BoundingBoxRefresh                 *bool           `protobuf:"varint,28,req,name=BoundingBoxRefresh" json:"BoundingBoxRefresh,omitempty"`
	BoundingBoxPadding                 *float32        `protobuf:"fixed32,29,req,name=BoundingBoxPadding" json:"BoundingBoxPadding,omitempty"`
	OutlineColor                       *Vec4           `protobuf:"bytes,30,req,name=OutlineColor" json:"OutlineColor,omitempty"`
	OutlineColorPickerOpen             *bool           `protobuf:"varint,31,req,name=OutlineColorPickerOpen" json:"OutlineColorPickerOpen,omitempty"`
	OutlineThickness                   *float32        `protobuf:"fixed32,32,req,name=OutlineThickness" json:"OutlineThickness,omitempty"`
	VertexSphereVisible                *bool           `protobuf:"varint,33,req,name=VertexSphereVisible" json:"VertexSphereVisible,omitempty"`
	VertexSphereColorPickerOpen        *bool           `protobuf:"varint,34,req,name=VertexSphereColorPickerOpen" json:"VertexSphereColorPickerOpen,omitempty"`
	VertexSphereIsSphere               *bool           `protobuf:"varint,35,req,name=VertexSphereIsSphere" json:"VertexSphereIsSphere,omitempty"`
	VertexSphereShowWireframes         *bool           `protobuf:"varint,36,req,name=VertexSphereShowWireframes" json:"VertexSphereShowWireframes,omitempty"`
	VertexSphereRadius                 *float32        `protobuf:"fixed32,37,req,name=VertexSphereRadius" json:"VertexSphereRadius,omitempty"`
	VertexSphereSegments               *int32          `protobuf:"varint,38,req,name=VertexSphereSegments" json:"VertexSphereSegments,omitempty"`
	VertexSphereColor                  *Vec4           `protobuf:"bytes,39,req,name=VertexSphereColor" json:"VertexSphereColor,omitempty"`
	ShowAllVisualArtefacts             *bool           `protobuf:"varint,40,req,name=ShowAllVisualArtefacts" json:"ShowAllVisualArtefacts,omitempty"`
	ShowZAxis                          *bool           `protobuf:"varint,41,req,name=ShowZAxis" json:"ShowZAxis,omitempty"`
	WorldGridSizeSquares               *int32          `protobuf:"varint,42,req,name=WorldGridSizeSquares" json:"WorldGridSizeSquares,omitempty"`
	WorldGridFixedWithWorld            *bool           `protobuf:"varint,43,req,name=WorldGridFixedWithWorld" json:"WorldGridFixedWithWorld,omitempty"`
	ShowGrid                           *bool           `protobuf:"varint,44,req,name=ShowGrid" json:"ShowGrid,omitempty"`
	ActAsMirror                        *bool           `protobuf:"varint,45,req,name=ActAsMirror" json:"ActAsMirror,omitempty"`
	SkyboxSelectedItem                 *int32          `protobuf:"varint,46,req,name=SkyboxSelectedItem" json:"SkyboxSelectedItem,omitempty"`
	Camera                             *CameraSettings `protobuf:"bytes,47,req,name=camera" json:"camera,omitempty"`
	Grid                               *GridSettings   `protobuf:"bytes,48,opt,name=grid" json:"grid,omitempty"`
	Lights                             []*LightObject  `protobuf:"bytes,49,rep,name=lights" json:"lights,omitempty"`
	UIAmbientLightX                    *float32        `protobuf:"fixed32,50,req,name=UIAmbientLightX" json:"UIAmbientLightX,omitempty"`
	UIAmbientLightY                    *float32        `protobuf:"fixed32,51,req,name=UIAmbientLightY" json:"UIAmbientLightY,omitempty"`
	UIAmbientLightZ                    *float32        `protobuf:"fixed32,52,req,name=UIAmbientLightZ" json:"UIAmbientLightZ,omitempty"`
	SolidLightDirectionX               *float32        `protobuf:"fixed32,53,req,name=SolidLightDirectionX" json:"SolidLightDirectionX,omitempty"`
	SolidLightDirectionY               *float32        `protobuf:"fixed32,54,req,name=SolidLightDirectionY" json:"SolidLightDirectionY,omitempty"`
	SolidLightDirectionZ               *float32        `protobuf:"fixed32,55,req,name=SolidLightDirectionZ" json:"SolidLightDirectionZ,omitempty"`
	SolidLightMaterialColor            *Vec3           `protobuf:"bytes,56,req,name=SolidLightMaterialColor" json:"SolidLightMaterialColor,omitempty"`
	SolidLightAmbient                  *Vec3           `protobuf:"bytes,57,req,name=SolidLightAmbient" json:"SolidLightAmbient,omitempty"`
	SolidLightDiffuse                  *Vec3           `protobuf:"bytes,58,req,name=SolidLightDiffuse" json:"SolidLightDiffuse,omitempty"`
	SolidLightSpecular                 *Vec3           `protobuf:"bytes,59,req,name=SolidLightSpecular" json:"SolidLightSpecular,omitempty"`
	SolidLightAmbientStrength          *float32        `protobuf:"fixed32,60,req,name=SolidLightAmbientStrength" json:"SolidLightAmbientStrength,omitempty"`
	SolidLightDiffuseStrength          *float32        `protobuf:"fixed32,61,req,name=SolidLightDiffuseStrength" json:"SolidLightDiffuseStrength,omitempty"`
	SolidLightSpecularStrength         *float32        `protobuf:"fixed32,62,req,name=SolidLightSpecularStrength" json:"SolidLightSpecularStrength,omitempty"`
	SolidLightMaterialColorColorPicker *bool           `protobuf:"varint,63,req,name=SolidLightMaterialColorColorPicker" json:"SolidLightMaterialColorColorPicker,omitempty"`
	SolidLightAmbientColorPicker       *bool           `protobuf:"varint,64,req,name=SolidLightAmbientColorPicker" json:"SolidLightAmbientColorPicker,omitempty"`
	SolidLightDiffuseColorPicker       *bool           `protobuf:"varint,65,req,name=SolidLightDiffuseColorPicker" json:"SolidLightDiffuseColorPicker,omitempty"`
	SolidLightSpecularColorPicker      *bool           `protobuf:"varint,66,req,name=SolidLightSpecularColorPicker" json:"SolidLightSpecularColorPicker,omitempty"`
	DeferredTestMode                   *bool           `protobuf:"varint,67,req,name=DeferredTestMode" json:"DeferredTestMode,omitempty"`
	DeferredTestLights                 *bool           `protobuf:"varint,68,req,name=DeferredTestLights" json:"DeferredTestLights,omitempty"`
	DeferredRandomizeLightPositions    *bool           `protobuf:"varint,69,req,name=DeferredRandomizeLightPositions" json:"DeferredRandomizeLightPositions,omitempty"`
	LightingPassDrawMode               *int32          `protobuf:"varint,70,req,name=LightingPassDrawMode" json:"LightingPassDrawMode,omitempty"`
	DeferredTestLightsNumber           *int32          `protobuf:"varint,71,req,name=DeferredTestLightsNumber" json:"DeferredTestLightsNumber,omitempty"`
	DeferredAmbientStrength            *float32        `protobuf:"fixed32,72,req,name=DeferredAmbientStrength" json:"DeferredAmbientStrength,omitempty"`
	DebugShadowTexture                 *bool           `protobuf:"varint,73,req,name=DebugShadowTexture" json:"DebugShadowTexture,omitempty"`
	XXX_NoUnkeyedLiteral               struct{}        `json:"-"`
	XXX_unrecognized                   []byte          `json:"-"`
	XXX_sizecache                      int32           `json:"-"`
}

func (m *GUISettings) Reset()         { *m = GUISettings{} }
func (m *GUISettings) String() string { return proto.CompactTextString(m) }
func (*GUISettings) ProtoMessage()    {}
func (*GUISettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d0f8268449b23b7, []int{0}
}

func (m *GUISettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GUISettings.Unmarshal(m, b)
}
func (m *GUISettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GUISettings.Marshal(b, m, deterministic)
}
func (m *GUISettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GUISettings.Merge(m, src)
}
func (m *GUISettings) XXX_Size() int {
	return xxx_messageInfo_GUISettings.Size(m)
}
func (m *GUISettings) XXX_DiscardUnknown() {
	xxx_messageInfo_GUISettings.DiscardUnknown(m)
}

var xxx_messageInfo_GUISettings proto.InternalMessageInfo

func (m *GUISettings) GetShowCube() bool {
	if m != nil && m.ShowCube != nil {
		return *m.ShowCube
	}
	return false
}

func (m *GUISettings) GetFov() float32 {
	if m != nil && m.Fov != nil {
		return *m.Fov
	}
	return 0
}

func (m *GUISettings) GetRatioWidth() float32 {
	if m != nil && m.RatioWidth != nil {
		return *m.RatioWidth
	}
	return 0
}

func (m *GUISettings) GetRatioHeight() float32 {
	if m != nil && m.RatioHeight != nil {
		return *m.RatioHeight
	}
	return 0
}

func (m *GUISettings) GetPlaneClose() float32 {
	if m != nil && m.PlaneClose != nil {
		return *m.PlaneClose
	}
	return 0
}

func (m *GUISettings) GetPlaneFar() float32 {
	if m != nil && m.PlaneFar != nil {
		return *m.PlaneFar
	}
	return 0
}

func (m *GUISettings) GetGammaCoeficient() float32 {
	if m != nil && m.GammaCoeficient != nil {
		return *m.GammaCoeficient
	}
	return 0
}

func (m *GUISettings) GetShowPickRays() bool {
	if m != nil && m.ShowPickRays != nil {
		return *m.ShowPickRays
	}
	return false
}

func (m *GUISettings) GetShowPickRaysSingle() bool {
	if m != nil && m.ShowPickRaysSingle != nil {
		return *m.ShowPickRaysSingle
	}
	return false
}

func (m *GUISettings) GetRayAnimate() bool {
	if m != nil && m.RayAnimate != nil {
		return *m.RayAnimate
	}
	return false
}

func (m *GUISettings) GetRayOriginX() float32 {
	if m != nil && m.RayOriginX != nil {
		return *m.RayOriginX
	}
	return 0
}

func (m *GUISettings) GetRayOriginY() float32 {
	if m != nil && m.RayOriginY != nil {
		return *m.RayOriginY
	}
	return 0
}

func (m *GUISettings) GetRayOriginZ() float32 {
	if m != nil && m.RayOriginZ != nil {
		return *m.RayOriginZ
	}
	return 0
}

func (m *GUISettings) GetRayOriginXS() string {
	if m != nil && m.RayOriginXS != nil {
		return *m.RayOriginXS
	}
	return ""
}

func (m *GUISettings) GetRayOriginYS() string {
	if m != nil && m.RayOriginYS != nil {
		return *m.RayOriginYS
	}
	return ""
}

func (m *GUISettings) GetRayOriginZS() string {
	if m != nil && m.RayOriginZS != nil {
		return *m.RayOriginZS
	}
	return ""
}

func (m *GUISettings) GetRayDraw() bool {
	if m != nil && m.RayDraw != nil {
		return *m.RayDraw
	}
	return false
}

func (m *GUISettings) GetRayDirectionX() float32 {
	if m != nil && m.RayDirectionX != nil {
		return *m.RayDirectionX
	}
	return 0
}

func (m *GUISettings) GetRayDirectionY() float32 {
	if m != nil && m.RayDirectionY != nil {
		return *m.RayDirectionY
	}
	return 0
}

func (m *GUISettings) GetRayDirectionZ() float32 {
	if m != nil && m.RayDirectionZ != nil {
		return *m.RayDirectionZ
	}
	return 0
}

func (m *GUISettings) GetRayDirectionXS() string {
	if m != nil && m.RayDirectionXS != nil {
		return *m.RayDirectionXS
	}
	return ""
}

func (m *GUISettings) GetRayDirectionYS() string {
	if m != nil && m.RayDirectionYS != nil {
		return *m.RayDirectionYS
	}
	return ""
}

func (m *GUISettings) GetRayDirectionZS() string {
	if m != nil && m.RayDirectionZS != nil {
		return *m.RayDirectionZS
	}
	return ""
}

func (m *GUISettings) GetOcclusionCulling() bool {
	if m != nil && m.OcclusionCulling != nil {
		return *m.OcclusionCulling
	}
	return false
}

func (m *GUISettings) GetRenderingDepth() bool {
	if m != nil && m.RenderingDepth != nil {
		return *m.RenderingDepth
	}
	return false
}

func (m *GUISettings) GetSelectedViewModelSkin() uint32 {
	if m != nil && m.SelectedViewModelSkin != nil {
		return *m.SelectedViewModelSkin
	}
	return 0
}

func (m *GUISettings) GetShowBoundingBox() bool {
	if m != nil && m.ShowBoundingBox != nil {
		return *m.ShowBoundingBox
	}
	return false
}

func (m *GUISettings) GetBoundingBoxRefresh() bool {
	if m != nil && m.BoundingBoxRefresh != nil {
		return *m.BoundingBoxRefresh
	}
	return false
}

func (m *GUISettings) GetBoundingBoxPadding() float32 {
	if m != nil && m.BoundingBoxPadding != nil {
		return *m.BoundingBoxPadding
	}
	return 0
}

func (m *GUISettings) GetOutlineColor() *Vec4 {
	if m != nil {
		return m.OutlineColor
	}
	return nil
}

func (m *GUISettings) GetOutlineColorPickerOpen() bool {
	if m != nil && m.OutlineColorPickerOpen != nil {
		return *m.OutlineColorPickerOpen
	}
	return false
}

func (m *GUISettings) GetOutlineThickness() float32 {
	if m != nil && m.OutlineThickness != nil {
		return *m.OutlineThickness
	}
	return 0
}

func (m *GUISettings) GetVertexSphereVisible() bool {
	if m != nil && m.VertexSphereVisible != nil {
		return *m.VertexSphereVisible
	}
	return false
}

func (m *GUISettings) GetVertexSphereColorPickerOpen() bool {
	if m != nil && m.VertexSphereColorPickerOpen != nil {
		return *m.VertexSphereColorPickerOpen
	}
	return false
}

func (m *GUISettings) GetVertexSphereIsSphere() bool {
	if m != nil && m.VertexSphereIsSphere != nil {
		return *m.VertexSphereIsSphere
	}
	return false
}

func (m *GUISettings) GetVertexSphereShowWireframes() bool {
	if m != nil && m.VertexSphereShowWireframes != nil {
		return *m.VertexSphereShowWireframes
	}
	return false
}

func (m *GUISettings) GetVertexSphereRadius() float32 {
	if m != nil && m.VertexSphereRadius != nil {
		return *m.VertexSphereRadius
	}
	return 0
}

func (m *GUISettings) GetVertexSphereSegments() int32 {
	if m != nil && m.VertexSphereSegments != nil {
		return *m.VertexSphereSegments
	}
	return 0
}

func (m *GUISettings) GetVertexSphereColor() *Vec4 {
	if m != nil {
		return m.VertexSphereColor
	}
	return nil
}

func (m *GUISettings) GetShowAllVisualArtefacts() bool {
	if m != nil && m.ShowAllVisualArtefacts != nil {
		return *m.ShowAllVisualArtefacts
	}
	return false
}

func (m *GUISettings) GetShowZAxis() bool {
	if m != nil && m.ShowZAxis != nil {
		return *m.ShowZAxis
	}
	return false
}

func (m *GUISettings) GetWorldGridSizeSquares() int32 {
	if m != nil && m.WorldGridSizeSquares != nil {
		return *m.WorldGridSizeSquares
	}
	return 0
}

func (m *GUISettings) GetWorldGridFixedWithWorld() bool {
	if m != nil && m.WorldGridFixedWithWorld != nil {
		return *m.WorldGridFixedWithWorld
	}
	return false
}

func (m *GUISettings) GetShowGrid() bool {
	if m != nil && m.ShowGrid != nil {
		return *m.ShowGrid
	}
	return false
}

func (m *GUISettings) GetActAsMirror() bool {
	if m != nil && m.ActAsMirror != nil {
		return *m.ActAsMirror
	}
	return false
}

func (m *GUISettings) GetSkyboxSelectedItem() int32 {
	if m != nil && m.SkyboxSelectedItem != nil {
		return *m.SkyboxSelectedItem
	}
	return 0
}

func (m *GUISettings) GetCamera() *CameraSettings {
	if m != nil {
		return m.Camera
	}
	return nil
}

func (m *GUISettings) GetGrid() *GridSettings {
	if m != nil {
		return m.Grid
	}
	return nil
}

func (m *GUISettings) GetLights() []*LightObject {
	if m != nil {
		return m.Lights
	}
	return nil
}

func (m *GUISettings) GetUIAmbientLightX() float32 {
	if m != nil && m.UIAmbientLightX != nil {
		return *m.UIAmbientLightX
	}
	return 0
}

func (m *GUISettings) GetUIAmbientLightY() float32 {
	if m != nil && m.UIAmbientLightY != nil {
		return *m.UIAmbientLightY
	}
	return 0
}

func (m *GUISettings) GetUIAmbientLightZ() float32 {
	if m != nil && m.UIAmbientLightZ != nil {
		return *m.UIAmbientLightZ
	}
	return 0
}

func (m *GUISettings) GetSolidLightDirectionX() float32 {
	if m != nil && m.SolidLightDirectionX != nil {
		return *m.SolidLightDirectionX
	}
	return 0
}

func (m *GUISettings) GetSolidLightDirectionY() float32 {
	if m != nil && m.SolidLightDirectionY != nil {
		return *m.SolidLightDirectionY
	}
	return 0
}

func (m *GUISettings) GetSolidLightDirectionZ() float32 {
	if m != nil && m.SolidLightDirectionZ != nil {
		return *m.SolidLightDirectionZ
	}
	return 0
}

func (m *GUISettings) GetSolidLightMaterialColor() *Vec3 {
	if m != nil {
		return m.SolidLightMaterialColor
	}
	return nil
}

func (m *GUISettings) GetSolidLightAmbient() *Vec3 {
	if m != nil {
		return m.SolidLightAmbient
	}
	return nil
}

func (m *GUISettings) GetSolidLightDiffuse() *Vec3 {
	if m != nil {
		return m.SolidLightDiffuse
	}
	return nil
}

func (m *GUISettings) GetSolidLightSpecular() *Vec3 {
	if m != nil {
		return m.SolidLightSpecular
	}
	return nil
}

func (m *GUISettings) GetSolidLightAmbientStrength() float32 {
	if m != nil && m.SolidLightAmbientStrength != nil {
		return *m.SolidLightAmbientStrength
	}
	return 0
}

func (m *GUISettings) GetSolidLightDiffuseStrength() float32 {
	if m != nil && m.SolidLightDiffuseStrength != nil {
		return *m.SolidLightDiffuseStrength
	}
	return 0
}

func (m *GUISettings) GetSolidLightSpecularStrength() float32 {
	if m != nil && m.SolidLightSpecularStrength != nil {
		return *m.SolidLightSpecularStrength
	}
	return 0
}

func (m *GUISettings) GetSolidLightMaterialColorColorPicker() bool {
	if m != nil && m.SolidLightMaterialColorColorPicker != nil {
		return *m.SolidLightMaterialColorColorPicker
	}
	return false
}

func (m *GUISettings) GetSolidLightAmbientColorPicker() bool {
	if m != nil && m.SolidLightAmbientColorPicker != nil {
		return *m.SolidLightAmbientColorPicker
	}
	return false
}

func (m *GUISettings) GetSolidLightDiffuseColorPicker() bool {
	if m != nil && m.SolidLightDiffuseColorPicker != nil {
		return *m.SolidLightDiffuseColorPicker
	}
	return false
}

func (m *GUISettings) GetSolidLightSpecularColorPicker() bool {
	if m != nil && m.SolidLightSpecularColorPicker != nil {
		return *m.SolidLightSpecularColorPicker
	}
	return false
}

func (m *GUISettings) GetDeferredTestMode() bool {
	if m != nil && m.DeferredTestMode != nil {
		return *m.DeferredTestMode
	}
	return false
}

func (m *GUISettings) GetDeferredTestLights() bool {
	if m != nil && m.DeferredTestLights != nil {
		return *m.DeferredTestLights
	}
	return false
}

func (m *GUISettings) GetDeferredRandomizeLightPositions() bool {
	if m != nil && m.DeferredRandomizeLightPositions != nil {
		return *m.DeferredRandomizeLightPositions
	}
	return false
}

func (m *GUISettings) GetLightingPassDrawMode() int32 {
	if m != nil && m.LightingPassDrawMode != nil {
		return *m.LightingPassDrawMode
	}
	return 0
}

func (m *GUISettings) GetDeferredTestLightsNumber() int32 {
	if m != nil && m.DeferredTestLightsNumber != nil {
		return *m.DeferredTestLightsNumber
	}
	return 0
}

func (m *GUISettings) GetDeferredAmbientStrength() float32 {
	if m != nil && m.DeferredAmbientStrength != nil {
		return *m.DeferredAmbientStrength
	}
	return 0
}

func (m *GUISettings) GetDebugShadowTexture() bool {
	if m != nil && m.DebugShadowTexture != nil {
		return *m.DebugShadowTexture
	}
	return false
}

type CameraSettings struct {
	CameraPosition       *Vec3             `protobuf:"bytes,1,req,name=cameraPosition" json:"cameraPosition,omitempty"`
	View_Eye             *Vec3             `protobuf:"bytes,2,req,name=View_Eye,json=ViewEye" json:"View_Eye,omitempty"`
	View_Center          *Vec3             `protobuf:"bytes,3,req,name=View_Center,json=ViewCenter" json:"View_Center,omitempty"`
	View_Up              *Vec3             `protobuf:"bytes,4,req,name=View_Up,json=ViewUp" json:"View_Up,omitempty"`
	PositionX            *ObjectCoordinate `protobuf:"bytes,5,req,name=positionX" json:"positionX,omitempty"`
	PositionY            *ObjectCoordinate `protobuf:"bytes,6,req,name=positionY" json:"positionY,omitempty"`
	PositionZ            *ObjectCoordinate `protobuf:"bytes,7,req,name=positionZ" json:"positionZ,omitempty"`
	RotateX              *ObjectCoordinate `protobuf:"bytes,8,req,name=rotateX" json:"rotateX,omitempty"`
	RotateY              *ObjectCoordinate `protobuf:"bytes,9,req,name=rotateY" json:"rotateY,omitempty"`
	RotateZ              *ObjectCoordinate `protobuf:"bytes,10,req,name=rotateZ" json:"rotateZ,omitempty"`
	RotateCenterX        *ObjectCoordinate `protobuf:"bytes,11,req,name=rotateCenterX" json:"rotateCenterX,omitempty"`
	RotateCenterY        *ObjectCoordinate `protobuf:"bytes,12,req,name=rotateCenterY" json:"rotateCenterY,omitempty"`
	RotateCenterZ        *ObjectCoordinate `protobuf:"bytes,13,req,name=rotateCenterZ" json:"rotateCenterZ,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CameraSettings) Reset()         { *m = CameraSettings{} }
func (m *CameraSettings) String() string { return proto.CompactTextString(m) }
func (*CameraSettings) ProtoMessage()    {}
func (*CameraSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d0f8268449b23b7, []int{1}
}

func (m *CameraSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CameraSettings.Unmarshal(m, b)
}
func (m *CameraSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CameraSettings.Marshal(b, m, deterministic)
}
func (m *CameraSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CameraSettings.Merge(m, src)
}
func (m *CameraSettings) XXX_Size() int {
	return xxx_messageInfo_CameraSettings.Size(m)
}
func (m *CameraSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_CameraSettings.DiscardUnknown(m)
}

var xxx_messageInfo_CameraSettings proto.InternalMessageInfo

func (m *CameraSettings) GetCameraPosition() *Vec3 {
	if m != nil {
		return m.CameraPosition
	}
	return nil
}

func (m *CameraSettings) GetView_Eye() *Vec3 {
	if m != nil {
		return m.View_Eye
	}
	return nil
}

func (m *CameraSettings) GetView_Center() *Vec3 {
	if m != nil {
		return m.View_Center
	}
	return nil
}

func (m *CameraSettings) GetView_Up() *Vec3 {
	if m != nil {
		return m.View_Up
	}
	return nil
}

func (m *CameraSettings) GetPositionX() *ObjectCoordinate {
	if m != nil {
		return m.PositionX
	}
	return nil
}

func (m *CameraSettings) GetPositionY() *ObjectCoordinate {
	if m != nil {
		return m.PositionY
	}
	return nil
}

func (m *CameraSettings) GetPositionZ() *ObjectCoordinate {
	if m != nil {
		return m.PositionZ
	}
	return nil
}

func (m *CameraSettings) GetRotateX() *ObjectCoordinate {
	if m != nil {
		return m.RotateX
	}
	return nil
}

func (m *CameraSettings) GetRotateY() *ObjectCoordinate {
	if m != nil {
		return m.RotateY
	}
	return nil
}

func (m *CameraSettings) GetRotateZ() *ObjectCoordinate {
	if m != nil {
		return m.RotateZ
	}
	return nil
}

func (m *CameraSettings) GetRotateCenterX() *ObjectCoordinate {
	if m != nil {
		return m.RotateCenterX
	}
	return nil
}

func (m *CameraSettings) GetRotateCenterY() *ObjectCoordinate {
	if m != nil {
		return m.RotateCenterY
	}
	return nil
}

func (m *CameraSettings) GetRotateCenterZ() *ObjectCoordinate {
	if m != nil {
		return m.RotateCenterZ
	}
	return nil
}

type GridSettings struct {
	ActAsMirror          *bool             `protobuf:"varint,1,req,name=actAsMirror" json:"actAsMirror,omitempty"`
	GridSize             *int32            `protobuf:"varint,2,req,name=gridSize" json:"gridSize,omitempty"`
	PositionX            *ObjectCoordinate `protobuf:"bytes,3,req,name=positionX" json:"positionX,omitempty"`
	PositionY            *ObjectCoordinate `protobuf:"bytes,4,req,name=positionY" json:"positionY,omitempty"`
	PositionZ            *ObjectCoordinate `protobuf:"bytes,5,req,name=positionZ" json:"positionZ,omitempty"`
	RotateX              *ObjectCoordinate `protobuf:"bytes,6,req,name=rotateX" json:"rotateX,omitempty"`
	RotateY              *ObjectCoordinate `protobuf:"bytes,7,req,name=rotateY" json:"rotateY,omitempty"`
	RotateZ              *ObjectCoordinate `protobuf:"bytes,8,req,name=rotateZ" json:"rotateZ,omitempty"`
	ScaleX               *ObjectCoordinate `protobuf:"bytes,9,req,name=scaleX" json:"scaleX,omitempty"`
	ScaleY               *ObjectCoordinate `protobuf:"bytes,10,req,name=scaleY" json:"scaleY,omitempty"`
	ScaleZ               *ObjectCoordinate `protobuf:"bytes,11,req,name=scaleZ" json:"scaleZ,omitempty"`
	Transparency         *float32          `protobuf:"fixed32,12,req,name=transparency" json:"transparency,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GridSettings) Reset()         { *m = GridSettings{} }
func (m *GridSettings) String() string { return proto.CompactTextString(m) }
func (*GridSettings) ProtoMessage()    {}
func (*GridSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d0f8268449b23b7, []int{2}
}

func (m *GridSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GridSettings.Unmarshal(m, b)
}
func (m *GridSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GridSettings.Marshal(b, m, deterministic)
}
func (m *GridSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GridSettings.Merge(m, src)
}
func (m *GridSettings) XXX_Size() int {
	return xxx_messageInfo_GridSettings.Size(m)
}
func (m *GridSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_GridSettings.DiscardUnknown(m)
}

var xxx_messageInfo_GridSettings proto.InternalMessageInfo

func (m *GridSettings) GetActAsMirror() bool {
	if m != nil && m.ActAsMirror != nil {
		return *m.ActAsMirror
	}
	return false
}

func (m *GridSettings) GetGridSize() int32 {
	if m != nil && m.GridSize != nil {
		return *m.GridSize
	}
	return 0
}

func (m *GridSettings) GetPositionX() *ObjectCoordinate {
	if m != nil {
		return m.PositionX
	}
	return nil
}

func (m *GridSettings) GetPositionY() *ObjectCoordinate {
	if m != nil {
		return m.PositionY
	}
	return nil
}

func (m *GridSettings) GetPositionZ() *ObjectCoordinate {
	if m != nil {
		return m.PositionZ
	}
	return nil
}

func (m *GridSettings) GetRotateX() *ObjectCoordinate {
	if m != nil {
		return m.RotateX
	}
	return nil
}

func (m *GridSettings) GetRotateY() *ObjectCoordinate {
	if m != nil {
		return m.RotateY
	}
	return nil
}

func (m *GridSettings) GetRotateZ() *ObjectCoordinate {
	if m != nil {
		return m.RotateZ
	}
	return nil
}

func (m *GridSettings) GetScaleX() *ObjectCoordinate {
	if m != nil {
		return m.ScaleX
	}
	return nil
}

func (m *GridSettings) GetScaleY() *ObjectCoordinate {
	if m != nil {
		return m.ScaleY
	}
	return nil
}

func (m *GridSettings) GetScaleZ() *ObjectCoordinate {
	if m != nil {
		return m.ScaleZ
	}
	return nil
}

func (m *GridSettings) GetTransparency() float32 {
	if m != nil && m.Transparency != nil {
		return *m.Transparency
	}
	return 0
}

type LightObject struct {
	Title                *string           `protobuf:"bytes,1,req,name=title" json:"title,omitempty"`
	Description          *string           `protobuf:"bytes,2,req,name=description" json:"description,omitempty"`
	Type                 *int32            `protobuf:"varint,3,req,name=type" json:"type,omitempty"`
	ShowLampObject       *bool             `protobuf:"varint,4,req,name=showLampObject" json:"showLampObject,omitempty"`
	ShowLampDirection    *bool             `protobuf:"varint,5,req,name=showLampDirection" json:"showLampDirection,omitempty"`
	ShowInWire           *bool             `protobuf:"varint,6,req,name=showInWire" json:"showInWire,omitempty"`
	PositionX            *ObjectCoordinate `protobuf:"bytes,7,req,name=positionX" json:"positionX,omitempty"`
	PositionY            *ObjectCoordinate `protobuf:"bytes,8,req,name=positionY" json:"positionY,omitempty"`
	PositionZ            *ObjectCoordinate `protobuf:"bytes,9,req,name=positionZ" json:"positionZ,omitempty"`
	DirectionX           *ObjectCoordinate `protobuf:"bytes,10,req,name=directionX" json:"directionX,omitempty"`
	DirectionY           *ObjectCoordinate `protobuf:"bytes,11,req,name=directionY" json:"directionY,omitempty"`
	DirectionZ           *ObjectCoordinate `protobuf:"bytes,12,req,name=directionZ" json:"directionZ,omitempty"`
	ScaleX               *ObjectCoordinate `protobuf:"bytes,13,req,name=scaleX" json:"scaleX,omitempty"`
	ScaleY               *ObjectCoordinate `protobuf:"bytes,14,req,name=scaleY" json:"scaleY,omitempty"`
	ScaleZ               *ObjectCoordinate `protobuf:"bytes,15,req,name=scaleZ" json:"scaleZ,omitempty"`
	RotateX              *ObjectCoordinate `protobuf:"bytes,16,req,name=rotateX" json:"rotateX,omitempty"`
	RotateY              *ObjectCoordinate `protobuf:"bytes,17,req,name=rotateY" json:"rotateY,omitempty"`
	RotateZ              *ObjectCoordinate `protobuf:"bytes,18,req,name=rotateZ" json:"rotateZ,omitempty"`
	RotateCenterX        *ObjectCoordinate `protobuf:"bytes,19,req,name=rotateCenterX" json:"rotateCenterX,omitempty"`
	RotateCenterY        *ObjectCoordinate `protobuf:"bytes,20,req,name=rotateCenterY" json:"rotateCenterY,omitempty"`
	RotateCenterZ        *ObjectCoordinate `protobuf:"bytes,21,req,name=rotateCenterZ" json:"rotateCenterZ,omitempty"`
	Ambient              *MaterialColor    `protobuf:"bytes,22,req,name=ambient" json:"ambient,omitempty"`
	Diffuse              *MaterialColor    `protobuf:"bytes,23,req,name=diffuse" json:"diffuse,omitempty"`
	Specular             *MaterialColor    `protobuf:"bytes,24,req,name=specular" json:"specular,omitempty"`
	LCutOff              *ObjectCoordinate `protobuf:"bytes,25,req,name=lCutOff" json:"lCutOff,omitempty"`
	LOuterCutOff         *ObjectCoordinate `protobuf:"bytes,26,req,name=lOuterCutOff" json:"lOuterCutOff,omitempty"`
	LConstant            *ObjectCoordinate `protobuf:"bytes,27,req,name=lConstant" json:"lConstant,omitempty"`
	LLinear              *ObjectCoordinate `protobuf:"bytes,28,req,name=lLinear" json:"lLinear,omitempty"`
	LQuadratic           *ObjectCoordinate `protobuf:"bytes,29,req,name=lQuadratic" json:"lQuadratic,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LightObject) Reset()         { *m = LightObject{} }
func (m *LightObject) String() string { return proto.CompactTextString(m) }
func (*LightObject) ProtoMessage()    {}
func (*LightObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d0f8268449b23b7, []int{3}
}

func (m *LightObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LightObject.Unmarshal(m, b)
}
func (m *LightObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LightObject.Marshal(b, m, deterministic)
}
func (m *LightObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LightObject.Merge(m, src)
}
func (m *LightObject) XXX_Size() int {
	return xxx_messageInfo_LightObject.Size(m)
}
func (m *LightObject) XXX_DiscardUnknown() {
	xxx_messageInfo_LightObject.DiscardUnknown(m)
}

var xxx_messageInfo_LightObject proto.InternalMessageInfo

func (m *LightObject) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *LightObject) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *LightObject) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *LightObject) GetShowLampObject() bool {
	if m != nil && m.ShowLampObject != nil {
		return *m.ShowLampObject
	}
	return false
}

func (m *LightObject) GetShowLampDirection() bool {
	if m != nil && m.ShowLampDirection != nil {
		return *m.ShowLampDirection
	}
	return false
}

func (m *LightObject) GetShowInWire() bool {
	if m != nil && m.ShowInWire != nil {
		return *m.ShowInWire
	}
	return false
}

func (m *LightObject) GetPositionX() *ObjectCoordinate {
	if m != nil {
		return m.PositionX
	}
	return nil
}

func (m *LightObject) GetPositionY() *ObjectCoordinate {
	if m != nil {
		return m.PositionY
	}
	return nil
}

func (m *LightObject) GetPositionZ() *ObjectCoordinate {
	if m != nil {
		return m.PositionZ
	}
	return nil
}

func (m *LightObject) GetDirectionX() *ObjectCoordinate {
	if m != nil {
		return m.DirectionX
	}
	return nil
}

func (m *LightObject) GetDirectionY() *ObjectCoordinate {
	if m != nil {
		return m.DirectionY
	}
	return nil
}

func (m *LightObject) GetDirectionZ() *ObjectCoordinate {
	if m != nil {
		return m.DirectionZ
	}
	return nil
}

func (m *LightObject) GetScaleX() *ObjectCoordinate {
	if m != nil {
		return m.ScaleX
	}
	return nil
}

func (m *LightObject) GetScaleY() *ObjectCoordinate {
	if m != nil {
		return m.ScaleY
	}
	return nil
}

func (m *LightObject) GetScaleZ() *ObjectCoordinate {
	if m != nil {
		return m.ScaleZ
	}
	return nil
}

func (m *LightObject) GetRotateX() *ObjectCoordinate {
	if m != nil {
		return m.RotateX
	}
	return nil
}

func (m *LightObject) GetRotateY() *ObjectCoordinate {
	if m != nil {
		return m.RotateY
	}
	return nil
}

func (m *LightObject) GetRotateZ() *ObjectCoordinate {
	if m != nil {
		return m.RotateZ
	}
	return nil
}

func (m *LightObject) GetRotateCenterX() *ObjectCoordinate {
	if m != nil {
		return m.RotateCenterX
	}
	return nil
}

func (m *LightObject) GetRotateCenterY() *ObjectCoordinate {
	if m != nil {
		return m.RotateCenterY
	}
	return nil
}

func (m *LightObject) GetRotateCenterZ() *ObjectCoordinate {
	if m != nil {
		return m.RotateCenterZ
	}
	return nil
}

func (m *LightObject) GetAmbient() *MaterialColor {
	if m != nil {
		return m.Ambient
	}
	return nil
}

func (m *LightObject) GetDiffuse() *MaterialColor {
	if m != nil {
		return m.Diffuse
	}
	return nil
}

func (m *LightObject) GetSpecular() *MaterialColor {
	if m != nil {
		return m.Specular
	}
	return nil
}

func (m *LightObject) GetLCutOff() *ObjectCoordinate {
	if m != nil {
		return m.LCutOff
	}
	return nil
}

func (m *LightObject) GetLOuterCutOff() *ObjectCoordinate {
	if m != nil {
		return m.LOuterCutOff
	}
	return nil
}

func (m *LightObject) GetLConstant() *ObjectCoordinate {
	if m != nil {
		return m.LConstant
	}
	return nil
}

func (m *LightObject) GetLLinear() *ObjectCoordinate {
	if m != nil {
		return m.LLinear
	}
	return nil
}

func (m *LightObject) GetLQuadratic() *ObjectCoordinate {
	if m != nil {
		return m.LQuadratic
	}
	return nil
}

func init() {
	proto.RegisterType((*GUISettings)(nil), "saveopen.GUISettings")
	proto.RegisterType((*CameraSettings)(nil), "saveopen.CameraSettings")
	proto.RegisterType((*GridSettings)(nil), "saveopen.GridSettings")
	proto.RegisterType((*LightObject)(nil), "saveopen.LightObject")
}

func init() { proto.RegisterFile("KuplungAppSettings.proto", fileDescriptor_8d0f8268449b23b7) }

var fileDescriptor_8d0f8268449b23b7 = []byte{
	// 1772 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x58, 0xe9, 0x76, 0xdb, 0xc6,
	0x15, 0x3e, 0xa1, 0xb5, 0x50, 0x43, 0x49, 0xb6, 0xc7, 0x8b, 0x26, 0xb2, 0xe3, 0xb0, 0x6a, 0x9a,
	0x30, 0x6e, 0xa2, 0x38, 0xb2, 0xeb, 0xba, 0xae, 0xeb, 0x9a, 0xa6, 0xbc, 0xe8, 0xd4, 0x8e, 0x54,
	0xc0, 0x96, 0x05, 0xfc, 0xc9, 0x19, 0x01, 0x97, 0xe4, 0xd4, 0x20, 0xc0, 0x0e, 0x06, 0x91, 0x94,
	0xa7, 0xe8, 0x03, 0xf6, 0x5f, 0xdf, 0xa0, 0x4f, 0x90, 0x33, 0x17, 0x00, 0x89, 0x8d, 0x22, 0x45,
	0xff, 0x12, 0xe7, 0x5b, 0xae, 0x66, 0xb9, 0xb3, 0x5c, 0x10, 0xf6, 0x8f, 0x68, 0xe8, 0x45, 0x7e,
	0xaf, 0x3d, 0x1c, 0x9a, 0xa0, 0x94, 0xf0, 0x7b, 0xe1, 0xf6, 0x50, 0x06, 0x2a, 0xa0, 0xf5, 0x90,
	0xff, 0x02, 0xc1, 0x10, 0xfc, 0xcd, 0x54, 0xb3, 0x0b, 0x5d, 0xe1, 0x0b, 0x25, 0x02, 0x3f, 0xd1,
	0x6c, 0xfd, 0xe7, 0x16, 0x69, 0xbc, 0x7a, 0xbf, 0x97, 0x3a, 0xe9, 0x26, 0xa9, 0x9b, 0xfd, 0xe0,
	0xa4, 0x13, 0x1d, 0x03, 0xfb, 0xac, 0x59, 0x6b, 0xd5, 0x8d, 0x51, 0x9b, 0x5e, 0x21, 0x97, 0x5e,
	0x06, 0xbf, 0xb0, 0x5a, 0xb3, 0xd6, 0xaa, 0x19, 0xfa, 0x27, 0xbd, 0x43, 0x88, 0xc1, 0x95, 0x08,
	0x3e, 0x08, 0x57, 0xf5, 0xd9, 0x25, 0x24, 0x32, 0x08, 0x6d, 0x92, 0x06, 0xb6, 0x5e, 0x83, 0xe8,
	0xf5, 0x15, 0x5b, 0x40, 0x41, 0x16, 0xd2, 0x11, 0x0e, 0x3c, 0xee, 0x43, 0xc7, 0x0b, 0x42, 0x60,
	0x8b, 0x71, 0x84, 0x31, 0xa2, 0xfb, 0x83, 0xad, 0x97, 0x5c, 0xb2, 0x25, 0x64, 0x47, 0x6d, 0xda,
	0x22, 0x97, 0x5f, 0xf1, 0xc1, 0x80, 0x77, 0x02, 0xe8, 0x0a, 0x47, 0x80, 0xaf, 0xd8, 0x32, 0x4a,
	0x8a, 0x30, 0xdd, 0x22, 0xab, 0x7a, 0x14, 0x07, 0xc2, 0xf9, 0x68, 0xf0, 0xb3, 0x90, 0xd5, 0x71,
	0x64, 0x39, 0x8c, 0x6e, 0x13, 0x9a, 0x6d, 0x9b, 0xc2, 0xef, 0x79, 0xc0, 0x56, 0x50, 0x59, 0xc1,
	0xc4, 0x63, 0x3f, 0x6b, 0xfb, 0x62, 0xc0, 0x15, 0x30, 0x82, 0xba, 0x0c, 0x92, 0xf0, 0xfb, 0x52,
	0xf4, 0x84, 0x7f, 0xc4, 0x1a, 0xe9, 0xdc, 0xa4, 0x48, 0x8e, 0xb7, 0xd8, 0x6a, 0x81, 0xb7, 0x72,
	0xbc, 0xcd, 0xd6, 0x0a, 0xbc, 0x1d, 0xcf, 0x6d, 0x1a, 0xcd, 0x64, 0xeb, 0xcd, 0x5a, 0x6b, 0xc5,
	0xc8, 0x42, 0x39, 0x85, 0x65, 0xb2, 0xcb, 0x05, 0x85, 0x95, 0x57, 0xd8, 0x26, 0xbb, 0x52, 0x50,
	0xd8, 0x26, 0x65, 0x64, 0xd9, 0xe0, 0x67, 0xbb, 0x92, 0x9f, 0xb0, 0xab, 0x38, 0xc4, 0xb4, 0x49,
	0xbf, 0x22, 0x6b, 0xfa, 0xa7, 0x90, 0xe0, 0xe8, 0x84, 0x3a, 0x62, 0x14, 0xbb, 0x98, 0x07, 0x8b,
	0x2a, 0x8b, 0x5d, 0x2b, 0xab, 0xac, 0xa2, 0xca, 0x66, 0xd7, 0xcb, 0x2a, 0x9b, 0x7e, 0x4d, 0xd6,
	0x73, 0xc1, 0x4d, 0x76, 0x03, 0x3b, 0x5c, 0x40, 0x8b, 0x3a, 0xcb, 0x64, 0x37, 0xcb, 0x3a, 0xab,
	0xa4, 0xb3, 0x4d, 0xb6, 0x51, 0xd6, 0xd9, 0x26, 0xbd, 0x4b, 0xae, 0xec, 0x3b, 0x8e, 0x17, 0x85,
	0x22, 0xf0, 0x3b, 0x91, 0xe7, 0x09, 0xbf, 0xc7, 0x18, 0x4e, 0x46, 0x09, 0xc7, 0x98, 0xe0, 0xbb,
	0x20, 0x85, 0xde, 0x6d, 0x43, 0xd5, 0x67, 0x9f, 0xa3, 0xb2, 0x80, 0xd2, 0x07, 0xe4, 0x86, 0x09,
	0x1e, 0x38, 0x0a, 0xdc, 0x43, 0x01, 0x27, 0x6f, 0x03, 0x17, 0x3c, 0xf3, 0xa3, 0xf0, 0xd9, 0x66,
	0xb3, 0xd6, 0x5a, 0x33, 0xaa, 0x49, 0x9d, 0xf1, 0x3a, 0x13, 0x9f, 0x07, 0x91, 0xef, 0x0a, 0xbf,
	0xf7, 0x3c, 0x38, 0x65, 0xb7, 0x30, 0x7c, 0x11, 0xd6, 0xd9, 0x9c, 0x69, 0x1a, 0xd0, 0x95, 0x10,
	0xf6, 0xd9, 0xed, 0x38, 0x9b, 0xcb, 0x4c, 0x41, 0x7f, 0xc0, 0x5d, 0xfd, 0x8b, 0x7d, 0x81, 0xcb,
	0x50, 0xc1, 0xd0, 0x1d, 0xb2, 0xba, 0x1f, 0x29, 0x4f, 0xf8, 0xd0, 0x09, 0xbc, 0x40, 0xb2, 0x3b,
	0xcd, 0x5a, 0xab, 0xb1, 0xb3, 0xbe, 0x9d, 0x1e, 0x39, 0xdb, 0x87, 0xe0, 0x3c, 0x30, 0x72, 0x1a,
	0xfa, 0x90, 0xdc, 0xcc, 0xb6, 0xf5, 0x7e, 0x02, 0xb9, 0x3f, 0x04, 0x9f, 0x7d, 0x89, 0xfd, 0x9a,
	0xc0, 0xe2, 0xfc, 0xc7, 0xcc, 0xbb, 0xbe, 0x70, 0x3e, 0xfa, 0x10, 0x86, 0xac, 0x89, 0x3d, 0x2b,
	0xe1, 0xf4, 0x1e, 0xb9, 0x76, 0x08, 0x52, 0xc1, 0xa9, 0x39, 0xec, 0x83, 0x84, 0x43, 0x11, 0x8a,
	0x63, 0x0f, 0xd8, 0xef, 0xf0, 0x1f, 0x54, 0x51, 0xf4, 0x19, 0xb9, 0x95, 0x85, 0x8b, 0x5d, 0xdb,
	0x42, 0xe7, 0x79, 0x12, 0xba, 0x43, 0xae, 0x67, 0xe9, 0xbd, 0x30, 0xfe, 0xcb, 0x7e, 0x8f, 0xd6,
	0x4a, 0x8e, 0x3e, 0x25, 0x9b, 0x59, 0x5c, 0x2f, 0xdf, 0x07, 0x21, 0xa1, 0x2b, 0xf9, 0x00, 0x42,
	0xf6, 0x15, 0x3a, 0xcf, 0x51, 0xe8, 0xf5, 0xca, 0xb2, 0x06, 0x77, 0x45, 0x14, 0xb2, 0x3f, 0xc4,
	0xeb, 0x55, 0x66, 0x8a, 0x7d, 0x34, 0xa1, 0x37, 0x00, 0x5f, 0x85, 0xec, 0xeb, 0x66, 0xad, 0xb5,
	0x68, 0x54, 0x72, 0xf4, 0x09, 0xb9, 0x5a, 0x1a, 0x36, 0xfb, 0xa6, 0x72, 0xa1, 0xcb, 0x42, 0xbd,
	0xda, 0xba, 0xcf, 0x6d, 0xcf, 0x3b, 0x14, 0x61, 0xc4, 0xbd, 0xb6, 0x54, 0xd0, 0xe5, 0x8e, 0x0a,
	0x59, 0x2b, 0x5e, 0xed, 0x6a, 0x96, 0xde, 0x26, 0x2b, 0x9a, 0xb1, 0xdb, 0xa7, 0x22, 0x64, 0xdf,
	0xa2, 0x74, 0x0c, 0xe8, 0x71, 0x7c, 0x08, 0xa4, 0xe7, 0xbe, 0x92, 0xc2, 0x35, 0xc5, 0xaf, 0x60,
	0xfe, 0x3b, 0xe2, 0x12, 0x42, 0x76, 0x37, 0x1e, 0x47, 0x15, 0x47, 0x1f, 0x91, 0x8d, 0x11, 0xfe,
	0x52, 0x9c, 0x82, 0xfb, 0x41, 0xa8, 0x3e, 0x22, 0xec, 0x8f, 0x18, 0x7f, 0x12, 0x9d, 0xde, 0x86,
	0x9a, 0x61, 0xdf, 0x8d, 0x6f, 0x43, 0xdd, 0xd6, 0x67, 0x67, 0xdb, 0x51, 0xed, 0xf0, 0xad, 0x90,
	0x32, 0x90, 0xec, 0x7b, 0xa4, 0xb3, 0x10, 0xde, 0x28, 0x1f, 0xcf, 0x8e, 0x83, 0xd3, 0x74, 0x33,
	0xef, 0x29, 0x18, 0xb0, 0x6d, 0xec, 0x69, 0x05, 0x43, 0xef, 0x91, 0x25, 0x87, 0x0f, 0x40, 0x72,
	0xf6, 0x03, 0x4e, 0x32, 0x1b, 0x4f, 0x72, 0x07, 0xf1, 0xf4, 0x96, 0x36, 0x12, 0x1d, 0xbd, 0x4b,
	0x16, 0x7a, 0xba, 0x6f, 0xf7, 0x9a, 0x9f, 0xb5, 0x1a, 0x3b, 0x37, 0xc7, 0x7a, 0x9c, 0x82, 0x54,
	0x8d, 0x1a, 0xfa, 0x3d, 0x59, 0xf2, 0xf4, 0x95, 0x1b, 0xb2, 0x1f, 0x9b, 0x97, 0x5a, 0x8d, 0x9d,
	0x1b, 0x63, 0xf5, 0x1b, 0x8d, 0xef, 0x1f, 0xff, 0x0b, 0x1c, 0x65, 0x24, 0x22, 0x7d, 0xd4, 0xbc,
	0xdf, 0x6b, 0x0f, 0x8e, 0xf5, 0xfd, 0x89, 0xfc, 0x11, 0xdb, 0x89, 0x2f, 0xd7, 0x02, 0x5c, 0x56,
	0x5a, 0xec, 0x7e, 0x95, 0xd2, 0x2a, 0x2b, 0x6d, 0xf6, 0xa0, 0x4a, 0x69, 0xeb, 0x65, 0x36, 0x03,
	0x4f, 0xb8, 0xd8, 0xcc, 0xdc, 0x31, 0x7f, 0x42, 0x79, 0x25, 0x37, 0xc1, 0x63, 0xb1, 0x87, 0x13,
	0x3d, 0xd6, 0x04, 0x8f, 0xcd, 0xfe, 0x3c, 0xd1, 0x63, 0xd3, 0xd7, 0x64, 0x63, 0x8c, 0xbf, 0xe5,
	0x0a, 0xa4, 0xe0, 0x5e, 0xbc, 0x39, 0x1e, 0x55, 0x6c, 0x8e, 0xfb, 0xc6, 0x24, 0xb9, 0xde, 0x60,
	0x63, 0x2a, 0x99, 0x00, 0xf6, 0x97, 0xca, 0x18, 0x65, 0x61, 0xde, 0xbd, 0x2b, 0xba, 0xdd, 0x28,
	0x04, 0xf6, 0x78, 0x9a, 0x3b, 0x11, 0xd2, 0xa7, 0x84, 0x8e, 0x41, 0x73, 0x08, 0x4e, 0xe4, 0x71,
	0xc9, 0xfe, 0x5a, 0x69, 0xaf, 0x50, 0xd2, 0x27, 0xe4, 0xf3, 0x52, 0x97, 0x4c, 0x25, 0xc1, 0xef,
	0xa9, 0x3e, 0x7b, 0x82, 0xd3, 0x37, 0x59, 0x90, 0x77, 0x27, 0x5d, 0x1a, 0xb9, 0xff, 0x56, 0x74,
	0x17, 0x04, 0xfa, 0xf0, 0x2c, 0xf7, 0x68, 0x64, 0x7f, 0x8a, 0xf6, 0x73, 0x14, 0xf4, 0x27, 0xb2,
	0x35, 0x61, 0x49, 0x32, 0x47, 0x3b, 0xfb, 0x3b, 0xee, 0xe8, 0x19, 0x94, 0xf4, 0x39, 0xb9, 0x5d,
	0x1a, 0x6a, 0x36, 0xd2, 0x33, 0x8c, 0x74, 0xae, 0x26, 0x1f, 0x23, 0x19, 0x70, 0x36, 0x46, 0xbb,
	0x18, 0xa3, 0xac, 0xa1, 0xbb, 0xe4, 0x8b, 0xf2, 0xa8, 0xb3, 0x41, 0x9e, 0x63, 0x90, 0xf3, 0x45,
	0xfa, 0xba, 0xdd, 0x85, 0x2e, 0x48, 0x09, 0xee, 0x3b, 0x08, 0x95, 0x7e, 0x7d, 0xb0, 0x4e, 0xfc,
	0xdc, 0x29, 0xe2, 0xfa, 0x88, 0xcb, 0x62, 0x6f, 0xe2, 0x03, 0x66, 0x37, 0x7e, 0x66, 0x94, 0x19,
	0xfa, 0x9a, 0x7c, 0x99, 0xa2, 0x06, 0xf7, 0xdd, 0x60, 0x20, 0x7e, 0x05, 0xa4, 0x0e, 0x82, 0x30,
	0xae, 0x4b, 0xd8, 0x0b, 0x34, 0x4f, 0x93, 0xe9, 0x9d, 0x8b, 0x88, 0xf0, 0x7b, 0x07, 0x3c, 0x0c,
	0xf5, 0x93, 0x14, 0x7b, 0xfa, 0x32, 0xbe, 0x08, 0xaa, 0x38, 0xfa, 0x98, 0xb0, 0x72, 0x9f, 0x7e,
	0x8a, 0x06, 0xc7, 0x20, 0xd9, 0x2b, 0xf4, 0x4d, 0xe4, 0xf5, 0x25, 0x92, 0x72, 0xc5, 0x6c, 0x7f,
	0x8d, 0x09, 0x37, 0x89, 0x8e, 0xe7, 0xe8, 0x38, 0xea, 0x99, 0x7d, 0xee, 0x06, 0x27, 0xef, 0xe0,
	0x54, 0x45, 0x12, 0xd8, 0x5e, 0x3a, 0x47, 0x45, 0x66, 0xeb, 0x7f, 0x8b, 0x64, 0x3d, 0x7f, 0xde,
	0xd3, 0x87, 0x64, 0x3d, 0x3e, 0xf1, 0xd3, 0xf1, 0x63, 0x6d, 0x56, 0xde, 0xa8, 0x05, 0x15, 0xfd,
	0x96, 0xd4, 0xf5, 0x03, 0xf2, 0xe7, 0x17, 0x67, 0x80, 0x65, 0x5b, 0xd9, 0xb1, 0xac, 0xf9, 0x17,
	0x67, 0x40, 0x7f, 0x20, 0x0d, 0x94, 0x76, 0xc0, 0x57, 0x20, 0xb1, 0x96, 0x2b, 0xab, 0x89, 0x96,
	0xc4, 0x0a, 0xfa, 0x0d, 0x41, 0xef, 0xcf, 0xef, 0x87, 0x58, 0xd7, 0x95, 0xc5, 0x4b, 0x9a, 0x7e,
	0x3f, 0xa4, 0x8f, 0xc8, 0xca, 0x30, 0xe9, 0xd0, 0x11, 0x56, 0x78, 0x8d, 0x9d, 0xcd, 0xb1, 0x34,
	0xbe, 0x76, 0x3a, 0x41, 0x20, 0x5d, 0xe1, 0x73, 0x05, 0xc6, 0x58, 0x9c, 0x75, 0x5a, 0x58, 0xfd,
	0xcd, 0xe8, 0xb4, 0xb2, 0x4e, 0x1b, 0x8b, 0xc2, 0x19, 0x9d, 0x36, 0x7d, 0x40, 0x96, 0x65, 0xa0,
	0xb8, 0x82, 0x23, 0xac, 0x12, 0xcf, 0xf7, 0xa5, 0xd2, 0xb1, 0xcb, 0xc2, 0x8a, 0x71, 0x26, 0x97,
	0x35, 0x76, 0xd9, 0x58, 0x3f, 0xce, 0xe4, 0xb2, 0xe9, 0x33, 0xb2, 0x16, 0xff, 0x8c, 0x17, 0x22,
	0xae, 0x2d, 0xcf, 0xf7, 0xe6, 0x0d, 0xc5, 0x08, 0x71, 0xf5, 0x79, 0x81, 0x08, 0x56, 0x31, 0x42,
	0x5c, 0x9f, 0x5e, 0x20, 0x82, 0xbd, 0xf5, 0xdf, 0x05, 0xb2, 0x9a, 0x7d, 0xa5, 0xe8, 0xf7, 0x14,
	0xcf, 0xbc, 0xa7, 0xe2, 0x8f, 0x0f, 0x59, 0x48, 0xbf, 0xc6, 0x7a, 0xc9, 0xd3, 0x0e, 0xb3, 0x79,
	0xd1, 0x18, 0xb5, 0xf3, 0x49, 0x76, 0x69, 0xee, 0x24, 0x5b, 0x98, 0x3b, 0xc9, 0x16, 0xe7, 0x4c,
	0xb2, 0xa5, 0xb9, 0x92, 0x6c, 0x79, 0xae, 0x24, 0xab, 0xcf, 0x9e, 0x64, 0x3b, 0x64, 0x29, 0x74,
	0xb8, 0x07, 0x47, 0x33, 0xe4, 0x73, 0xa2, 0x1c, 0x79, 0xac, 0x19, 0xb2, 0x39, 0x51, 0x8e, 0x3c,
	0xf6, 0x0c, 0x59, 0x9c, 0x28, 0xe9, 0x16, 0x59, 0x55, 0x92, 0xfb, 0xe1, 0x90, 0x4b, 0xf0, 0x9d,
	0xb3, 0xe4, 0xdb, 0x49, 0x0e, 0xdb, 0xfa, 0x7f, 0x83, 0x34, 0x32, 0xcf, 0x5a, 0x7a, 0x9d, 0x2c,
	0x2a, 0xa1, 0xbc, 0xf8, 0xa3, 0xd6, 0x8a, 0x11, 0x37, 0x74, 0xce, 0xb9, 0x10, 0x3a, 0x52, 0x0c,
	0xf1, 0x50, 0xad, 0xc5, 0xdf, 0x3f, 0x32, 0x10, 0xa5, 0x64, 0x41, 0x9d, 0x0d, 0x01, 0x53, 0x6a,
	0xd1, 0xc0, 0xdf, 0xba, 0xc6, 0x0f, 0xfb, 0xc1, 0xc9, 0x1b, 0x3e, 0x18, 0xc6, 0xd1, 0x31, 0x6d,
	0xea, 0x46, 0x01, 0xa5, 0xdf, 0x91, 0xab, 0x29, 0x32, 0x7a, 0x3e, 0x62, 0x9e, 0xd4, 0x8d, 0x32,
	0x41, 0xef, 0x10, 0xa2, 0xc1, 0x3d, 0x5f, 0x57, 0x79, 0x98, 0x16, 0x75, 0x23, 0x83, 0xe4, 0x33,
	0x7c, 0x79, 0xee, 0x0c, 0xaf, 0xcf, 0x9d, 0xe1, 0x2b, 0x17, 0xc9, 0xf0, 0xc7, 0x84, 0xb8, 0xe3,
	0x67, 0xfb, 0xf4, 0x7c, 0xc8, 0xa8, 0x73, 0x5e, 0x6b, 0x86, 0xbc, 0xc8, 0xa8, 0x73, 0x5e, 0x7b,
	0x86, 0x73, 0x2d, 0xa3, 0xce, 0xe4, 0xfc, 0xda, 0x1c, 0x39, 0xbf, 0x3e, 0x47, 0xce, 0x5f, 0x9e,
	0x39, 0xe7, 0x33, 0x27, 0xc6, 0x95, 0xb9, 0x4e, 0x8c, 0xab, 0x73, 0x9d, 0x18, 0xf4, 0x13, 0xae,
	0xa5, 0x6b, 0x9f, 0x7c, 0x2d, 0x5d, 0xff, 0xe4, 0x6b, 0xe9, 0xc6, 0x05, 0xaf, 0x25, 0xfa, 0x23,
	0x59, 0xe6, 0x49, 0x21, 0x76, 0x13, 0xbd, 0x1b, 0x63, 0x6f, 0xee, 0xfd, 0x6f, 0xa4, 0x3a, 0x6d,
	0x71, 0x93, 0xea, 0x6b, 0x63, 0x8a, 0x25, 0xd1, 0xd1, 0xfb, 0xa4, 0x1e, 0xa6, 0x25, 0x17, 0x3b,
	0xdf, 0x33, 0x12, 0xea, 0x65, 0xf1, 0x3a, 0x91, 0xda, 0xef, 0x76, 0xf1, 0x9b, 0xe2, 0x94, 0x65,
	0x49, 0xa4, 0xf4, 0x29, 0x59, 0xf5, 0xf6, 0x23, 0x05, 0x32, 0xb1, 0x6e, 0x4e, 0xb5, 0xe6, 0xf4,
	0xfa, 0x08, 0xf0, 0x3a, 0x81, 0x1f, 0x2a, 0xee, 0x2b, 0xfc, 0xd8, 0x38, 0xe5, 0x08, 0x18, 0x89,
	0xb1, 0xbf, 0x6f, 0x84, 0x0f, 0x5c, 0xe2, 0x77, 0xc7, 0x69, 0xfd, 0x8d, 0xa5, 0x7a, 0x03, 0x7b,
	0xff, 0x8c, 0xb8, 0x2b, 0xb9, 0x12, 0x0e, 0x7e, 0x80, 0x9c, 0xb2, 0x81, 0xc7, 0xea, 0xdf, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x61, 0x44, 0x43, 0xbf, 0x0b, 0x19, 0x00, 0x00,
}
