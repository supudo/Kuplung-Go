// Code generated by protoc-gen-go. DO NOT EDIT.
// source: KuplungAppSettings.proto

package saveopen

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GUISettings struct {
	Setting_FOV                          *float32        `protobuf:"fixed32,1,req,name=Setting_FOV,json=SettingFOV" json:"Setting_FOV,omitempty"`
	Setting_OutlineThickness             *float32        `protobuf:"fixed32,2,req,name=Setting_OutlineThickness,json=SettingOutlineThickness" json:"Setting_OutlineThickness,omitempty"`
	Setting_RatioWidth                   *float32        `protobuf:"fixed32,3,req,name=Setting_RatioWidth,json=SettingRatioWidth" json:"Setting_RatioWidth,omitempty"`
	Setting_RatioHeight                  *float32        `protobuf:"fixed32,4,req,name=Setting_RatioHeight,json=SettingRatioHeight" json:"Setting_RatioHeight,omitempty"`
	Setting_PlaneClose                   *float32        `protobuf:"fixed32,5,req,name=Setting_PlaneClose,json=SettingPlaneClose" json:"Setting_PlaneClose,omitempty"`
	Setting_PlaneFar                     *float32        `protobuf:"fixed32,6,req,name=Setting_PlaneFar,json=SettingPlaneFar" json:"Setting_PlaneFar,omitempty"`
	Setting_GridSize                     *int32          `protobuf:"varint,7,req,name=Setting_GridSize,json=SettingGridSize" json:"Setting_GridSize,omitempty"`
	Setting_Skybox                       *int32          `protobuf:"varint,8,req,name=Setting_Skybox,json=SettingSkybox" json:"Setting_Skybox,omitempty"`
	Setting_OutlineColor                 *Vec4           `protobuf:"bytes,9,req,name=Setting_OutlineColor,json=SettingOutlineColor" json:"Setting_OutlineColor,omitempty"`
	Setting_UIAmbientLight               *Vec3           `protobuf:"bytes,10,req,name=Setting_UIAmbientLight,json=SettingUIAmbientLight" json:"Setting_UIAmbientLight,omitempty"`
	Setting_FixedGridWorld               *bool           `protobuf:"varint,11,req,name=Setting_FixedGridWorld,json=SettingFixedGridWorld" json:"Setting_FixedGridWorld,omitempty"`
	Setting_OutlineColorPickerOpen       *bool           `protobuf:"varint,12,req,name=Setting_OutlineColorPickerOpen,json=SettingOutlineColorPickerOpen" json:"Setting_OutlineColorPickerOpen,omitempty"`
	Setting_ShowAxisHelpers              *bool           `protobuf:"varint,13,req,name=Setting_ShowAxisHelpers,json=SettingShowAxisHelpers" json:"Setting_ShowAxisHelpers,omitempty"`
	Settings_ShowZAxis                   *bool           `protobuf:"varint,14,req,name=Settings_ShowZAxis,json=SettingsShowZAxis" json:"Settings_ShowZAxis,omitempty"`
	Setting_DeferredTestMode             *bool           `protobuf:"varint,15,req,name=Setting_DeferredTestMode,json=SettingDeferredTestMode" json:"Setting_DeferredTestMode,omitempty"`
	Setting_DeferredTestLights           *bool           `protobuf:"varint,16,req,name=Setting_DeferredTestLights,json=SettingDeferredTestLights" json:"Setting_DeferredTestLights,omitempty"`
	Setting_LightingPass_DrawMode        *int32          `protobuf:"varint,17,req,name=Setting_LightingPass_DrawMode,json=SettingLightingPassDrawMode" json:"Setting_LightingPass_DrawMode,omitempty"`
	Setting_DeferredTestLightsNumber     *int32          `protobuf:"varint,18,req,name=Setting_DeferredTestLightsNumber,json=SettingDeferredTestLightsNumber" json:"Setting_DeferredTestLightsNumber,omitempty"`
	Setting_DeferredAmbientStrength      *float32        `protobuf:"fixed32,19,req,name=Setting_DeferredAmbientStrength,json=SettingDeferredAmbientStrength" json:"Setting_DeferredAmbientStrength,omitempty"`
	ViewModelSkin                        *int32          `protobuf:"varint,20,req,name=viewModelSkin" json:"viewModelSkin,omitempty"`
	SolidLight_Direction                 *Vec3           `protobuf:"bytes,21,req,name=SolidLight_Direction,json=SolidLightDirection" json:"SolidLight_Direction,omitempty"`
	SolidLight_MaterialColor             *Vec3           `protobuf:"bytes,22,req,name=SolidLight_MaterialColor,json=SolidLightMaterialColor" json:"SolidLight_MaterialColor,omitempty"`
	SolidLight_Ambient                   *Vec3           `protobuf:"bytes,23,req,name=SolidLight_Ambient,json=SolidLightAmbient" json:"SolidLight_Ambient,omitempty"`
	SolidLight_Diffuse                   *Vec3           `protobuf:"bytes,24,req,name=SolidLight_Diffuse,json=SolidLightDiffuse" json:"SolidLight_Diffuse,omitempty"`
	SolidLight_Specular                  *Vec3           `protobuf:"bytes,25,req,name=SolidLight_Specular,json=SolidLightSpecular" json:"SolidLight_Specular,omitempty"`
	SolidLight_Ambient_Strength          *float32        `protobuf:"fixed32,26,req,name=SolidLight_Ambient_Strength,json=SolidLightAmbientStrength" json:"SolidLight_Ambient_Strength,omitempty"`
	SolidLight_Diffuse_Strength          *float32        `protobuf:"fixed32,27,req,name=SolidLight_Diffuse_Strength,json=SolidLightDiffuseStrength" json:"SolidLight_Diffuse_Strength,omitempty"`
	SolidLight_Specular_Strength         *float32        `protobuf:"fixed32,28,req,name=SolidLight_Specular_Strength,json=SolidLightSpecularStrength" json:"SolidLight_Specular_Strength,omitempty"`
	SolidLight_MaterialColor_ColorPicker *bool           `protobuf:"varint,29,req,name=SolidLight_MaterialColor_ColorPicker,json=SolidLightMaterialColorColorPicker" json:"SolidLight_MaterialColor_ColorPicker,omitempty"`
	SolidLight_Ambient_ColorPicker       *bool           `protobuf:"varint,30,req,name=SolidLight_Ambient_ColorPicker,json=SolidLightAmbientColorPicker" json:"SolidLight_Ambient_ColorPicker,omitempty"`
	SolidLight_Diffuse_ColorPicker       *bool           `protobuf:"varint,31,req,name=SolidLight_Diffuse_ColorPicker,json=SolidLightDiffuseColorPicker" json:"SolidLight_Diffuse_ColorPicker,omitempty"`
	SolidLight_Specular_ColorPicker      *bool           `protobuf:"varint,32,req,name=SolidLight_Specular_ColorPicker,json=SolidLightSpecularColorPicker" json:"SolidLight_Specular_ColorPicker,omitempty"`
	Setting_ShowTerrain                  *bool           `protobuf:"varint,33,req,name=Setting_ShowTerrain,json=SettingShowTerrain" json:"Setting_ShowTerrain,omitempty"`
	Setting_TerrainModel                 *bool           `protobuf:"varint,34,req,name=Setting_TerrainModel,json=SettingTerrainModel" json:"Setting_TerrainModel,omitempty"`
	Setting_TerrainAnimateX              *bool           `protobuf:"varint,35,req,name=Setting_TerrainAnimateX,json=SettingTerrainAnimateX" json:"Setting_TerrainAnimateX,omitempty"`
	Setting_TerrainAnimateY              *bool           `protobuf:"varint,36,req,name=Setting_TerrainAnimateY,json=SettingTerrainAnimateY" json:"Setting_TerrainAnimateY,omitempty"`
	HeightmapImage                       *string         `protobuf:"bytes,37,req,name=heightmapImage" json:"heightmapImage,omitempty"`
	Setting_TerrainWidth                 *int32          `protobuf:"varint,38,req,name=Setting_TerrainWidth,json=SettingTerrainWidth" json:"Setting_TerrainWidth,omitempty"`
	Setting_TerrainHeight                *int32          `protobuf:"varint,39,req,name=Setting_TerrainHeight,json=SettingTerrainHeight" json:"Setting_TerrainHeight,omitempty"`
	Setting_ShowSpaceship                *bool           `protobuf:"varint,40,req,name=Setting_ShowSpaceship,json=SettingShowSpaceship" json:"Setting_ShowSpaceship,omitempty"`
	Setting_GenerateSpaceship            *bool           `protobuf:"varint,41,req,name=Setting_GenerateSpaceship,json=SettingGenerateSpaceship" json:"Setting_GenerateSpaceship,omitempty"`
	Camera                               *CameraSettings `protobuf:"bytes,42,req,name=camera" json:"camera,omitempty"`
	Grid                                 *GridSettings   `protobuf:"bytes,43,req,name=grid" json:"grid,omitempty"`
	Lights                               []*LightObject  `protobuf:"bytes,44,rep,name=lights" json:"lights,omitempty"`
	XXX_NoUnkeyedLiteral                 struct{}        `json:"-"`
	XXX_unrecognized                     []byte          `json:"-"`
	XXX_sizecache                        int32           `json:"-"`
}

func (m *GUISettings) Reset()         { *m = GUISettings{} }
func (m *GUISettings) String() string { return proto.CompactTextString(m) }
func (*GUISettings) ProtoMessage()    {}
func (*GUISettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d0f8268449b23b7, []int{0}
}

func (m *GUISettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GUISettings.Unmarshal(m, b)
}
func (m *GUISettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GUISettings.Marshal(b, m, deterministic)
}
func (m *GUISettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GUISettings.Merge(m, src)
}
func (m *GUISettings) XXX_Size() int {
	return xxx_messageInfo_GUISettings.Size(m)
}
func (m *GUISettings) XXX_DiscardUnknown() {
	xxx_messageInfo_GUISettings.DiscardUnknown(m)
}

var xxx_messageInfo_GUISettings proto.InternalMessageInfo

func (m *GUISettings) GetSetting_FOV() float32 {
	if m != nil && m.Setting_FOV != nil {
		return *m.Setting_FOV
	}
	return 0
}

func (m *GUISettings) GetSetting_OutlineThickness() float32 {
	if m != nil && m.Setting_OutlineThickness != nil {
		return *m.Setting_OutlineThickness
	}
	return 0
}

func (m *GUISettings) GetSetting_RatioWidth() float32 {
	if m != nil && m.Setting_RatioWidth != nil {
		return *m.Setting_RatioWidth
	}
	return 0
}

func (m *GUISettings) GetSetting_RatioHeight() float32 {
	if m != nil && m.Setting_RatioHeight != nil {
		return *m.Setting_RatioHeight
	}
	return 0
}

func (m *GUISettings) GetSetting_PlaneClose() float32 {
	if m != nil && m.Setting_PlaneClose != nil {
		return *m.Setting_PlaneClose
	}
	return 0
}

func (m *GUISettings) GetSetting_PlaneFar() float32 {
	if m != nil && m.Setting_PlaneFar != nil {
		return *m.Setting_PlaneFar
	}
	return 0
}

func (m *GUISettings) GetSetting_GridSize() int32 {
	if m != nil && m.Setting_GridSize != nil {
		return *m.Setting_GridSize
	}
	return 0
}

func (m *GUISettings) GetSetting_Skybox() int32 {
	if m != nil && m.Setting_Skybox != nil {
		return *m.Setting_Skybox
	}
	return 0
}

func (m *GUISettings) GetSetting_OutlineColor() *Vec4 {
	if m != nil {
		return m.Setting_OutlineColor
	}
	return nil
}

func (m *GUISettings) GetSetting_UIAmbientLight() *Vec3 {
	if m != nil {
		return m.Setting_UIAmbientLight
	}
	return nil
}

func (m *GUISettings) GetSetting_FixedGridWorld() bool {
	if m != nil && m.Setting_FixedGridWorld != nil {
		return *m.Setting_FixedGridWorld
	}
	return false
}

func (m *GUISettings) GetSetting_OutlineColorPickerOpen() bool {
	if m != nil && m.Setting_OutlineColorPickerOpen != nil {
		return *m.Setting_OutlineColorPickerOpen
	}
	return false
}

func (m *GUISettings) GetSetting_ShowAxisHelpers() bool {
	if m != nil && m.Setting_ShowAxisHelpers != nil {
		return *m.Setting_ShowAxisHelpers
	}
	return false
}

func (m *GUISettings) GetSettings_ShowZAxis() bool {
	if m != nil && m.Settings_ShowZAxis != nil {
		return *m.Settings_ShowZAxis
	}
	return false
}

func (m *GUISettings) GetSetting_DeferredTestMode() bool {
	if m != nil && m.Setting_DeferredTestMode != nil {
		return *m.Setting_DeferredTestMode
	}
	return false
}

func (m *GUISettings) GetSetting_DeferredTestLights() bool {
	if m != nil && m.Setting_DeferredTestLights != nil {
		return *m.Setting_DeferredTestLights
	}
	return false
}

func (m *GUISettings) GetSetting_LightingPass_DrawMode() int32 {
	if m != nil && m.Setting_LightingPass_DrawMode != nil {
		return *m.Setting_LightingPass_DrawMode
	}
	return 0
}

func (m *GUISettings) GetSetting_DeferredTestLightsNumber() int32 {
	if m != nil && m.Setting_DeferredTestLightsNumber != nil {
		return *m.Setting_DeferredTestLightsNumber
	}
	return 0
}

func (m *GUISettings) GetSetting_DeferredAmbientStrength() float32 {
	if m != nil && m.Setting_DeferredAmbientStrength != nil {
		return *m.Setting_DeferredAmbientStrength
	}
	return 0
}

func (m *GUISettings) GetViewModelSkin() int32 {
	if m != nil && m.ViewModelSkin != nil {
		return *m.ViewModelSkin
	}
	return 0
}

func (m *GUISettings) GetSolidLight_Direction() *Vec3 {
	if m != nil {
		return m.SolidLight_Direction
	}
	return nil
}

func (m *GUISettings) GetSolidLight_MaterialColor() *Vec3 {
	if m != nil {
		return m.SolidLight_MaterialColor
	}
	return nil
}

func (m *GUISettings) GetSolidLight_Ambient() *Vec3 {
	if m != nil {
		return m.SolidLight_Ambient
	}
	return nil
}

func (m *GUISettings) GetSolidLight_Diffuse() *Vec3 {
	if m != nil {
		return m.SolidLight_Diffuse
	}
	return nil
}

func (m *GUISettings) GetSolidLight_Specular() *Vec3 {
	if m != nil {
		return m.SolidLight_Specular
	}
	return nil
}

func (m *GUISettings) GetSolidLight_Ambient_Strength() float32 {
	if m != nil && m.SolidLight_Ambient_Strength != nil {
		return *m.SolidLight_Ambient_Strength
	}
	return 0
}

func (m *GUISettings) GetSolidLight_Diffuse_Strength() float32 {
	if m != nil && m.SolidLight_Diffuse_Strength != nil {
		return *m.SolidLight_Diffuse_Strength
	}
	return 0
}

func (m *GUISettings) GetSolidLight_Specular_Strength() float32 {
	if m != nil && m.SolidLight_Specular_Strength != nil {
		return *m.SolidLight_Specular_Strength
	}
	return 0
}

func (m *GUISettings) GetSolidLight_MaterialColor_ColorPicker() bool {
	if m != nil && m.SolidLight_MaterialColor_ColorPicker != nil {
		return *m.SolidLight_MaterialColor_ColorPicker
	}
	return false
}

func (m *GUISettings) GetSolidLight_Ambient_ColorPicker() bool {
	if m != nil && m.SolidLight_Ambient_ColorPicker != nil {
		return *m.SolidLight_Ambient_ColorPicker
	}
	return false
}

func (m *GUISettings) GetSolidLight_Diffuse_ColorPicker() bool {
	if m != nil && m.SolidLight_Diffuse_ColorPicker != nil {
		return *m.SolidLight_Diffuse_ColorPicker
	}
	return false
}

func (m *GUISettings) GetSolidLight_Specular_ColorPicker() bool {
	if m != nil && m.SolidLight_Specular_ColorPicker != nil {
		return *m.SolidLight_Specular_ColorPicker
	}
	return false
}

func (m *GUISettings) GetSetting_ShowTerrain() bool {
	if m != nil && m.Setting_ShowTerrain != nil {
		return *m.Setting_ShowTerrain
	}
	return false
}

func (m *GUISettings) GetSetting_TerrainModel() bool {
	if m != nil && m.Setting_TerrainModel != nil {
		return *m.Setting_TerrainModel
	}
	return false
}

func (m *GUISettings) GetSetting_TerrainAnimateX() bool {
	if m != nil && m.Setting_TerrainAnimateX != nil {
		return *m.Setting_TerrainAnimateX
	}
	return false
}

func (m *GUISettings) GetSetting_TerrainAnimateY() bool {
	if m != nil && m.Setting_TerrainAnimateY != nil {
		return *m.Setting_TerrainAnimateY
	}
	return false
}

func (m *GUISettings) GetHeightmapImage() string {
	if m != nil && m.HeightmapImage != nil {
		return *m.HeightmapImage
	}
	return ""
}

func (m *GUISettings) GetSetting_TerrainWidth() int32 {
	if m != nil && m.Setting_TerrainWidth != nil {
		return *m.Setting_TerrainWidth
	}
	return 0
}

func (m *GUISettings) GetSetting_TerrainHeight() int32 {
	if m != nil && m.Setting_TerrainHeight != nil {
		return *m.Setting_TerrainHeight
	}
	return 0
}

func (m *GUISettings) GetSetting_ShowSpaceship() bool {
	if m != nil && m.Setting_ShowSpaceship != nil {
		return *m.Setting_ShowSpaceship
	}
	return false
}

func (m *GUISettings) GetSetting_GenerateSpaceship() bool {
	if m != nil && m.Setting_GenerateSpaceship != nil {
		return *m.Setting_GenerateSpaceship
	}
	return false
}

func (m *GUISettings) GetCamera() *CameraSettings {
	if m != nil {
		return m.Camera
	}
	return nil
}

func (m *GUISettings) GetGrid() *GridSettings {
	if m != nil {
		return m.Grid
	}
	return nil
}

func (m *GUISettings) GetLights() []*LightObject {
	if m != nil {
		return m.Lights
	}
	return nil
}

type CameraSettings struct {
	CameraPosition       *Vec3             `protobuf:"bytes,1,req,name=cameraPosition" json:"cameraPosition,omitempty"`
	View_Eye             *Vec3             `protobuf:"bytes,2,req,name=View_Eye,json=ViewEye" json:"View_Eye,omitempty"`
	View_Center          *Vec3             `protobuf:"bytes,3,req,name=View_Center,json=ViewCenter" json:"View_Center,omitempty"`
	View_Up              *Vec3             `protobuf:"bytes,4,req,name=View_Up,json=ViewUp" json:"View_Up,omitempty"`
	PositionX            *ObjectCoordinate `protobuf:"bytes,5,req,name=positionX" json:"positionX,omitempty"`
	PositionY            *ObjectCoordinate `protobuf:"bytes,6,req,name=positionY" json:"positionY,omitempty"`
	PositionZ            *ObjectCoordinate `protobuf:"bytes,7,req,name=positionZ" json:"positionZ,omitempty"`
	RotateX              *ObjectCoordinate `protobuf:"bytes,8,req,name=rotateX" json:"rotateX,omitempty"`
	RotateY              *ObjectCoordinate `protobuf:"bytes,9,req,name=rotateY" json:"rotateY,omitempty"`
	RotateZ              *ObjectCoordinate `protobuf:"bytes,10,req,name=rotateZ" json:"rotateZ,omitempty"`
	RotateCenterX        *ObjectCoordinate `protobuf:"bytes,11,req,name=rotateCenterX" json:"rotateCenterX,omitempty"`
	RotateCenterY        *ObjectCoordinate `protobuf:"bytes,12,req,name=rotateCenterY" json:"rotateCenterY,omitempty"`
	RotateCenterZ        *ObjectCoordinate `protobuf:"bytes,13,req,name=rotateCenterZ" json:"rotateCenterZ,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CameraSettings) Reset()         { *m = CameraSettings{} }
func (m *CameraSettings) String() string { return proto.CompactTextString(m) }
func (*CameraSettings) ProtoMessage()    {}
func (*CameraSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d0f8268449b23b7, []int{1}
}

func (m *CameraSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CameraSettings.Unmarshal(m, b)
}
func (m *CameraSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CameraSettings.Marshal(b, m, deterministic)
}
func (m *CameraSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CameraSettings.Merge(m, src)
}
func (m *CameraSettings) XXX_Size() int {
	return xxx_messageInfo_CameraSettings.Size(m)
}
func (m *CameraSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_CameraSettings.DiscardUnknown(m)
}

var xxx_messageInfo_CameraSettings proto.InternalMessageInfo

func (m *CameraSettings) GetCameraPosition() *Vec3 {
	if m != nil {
		return m.CameraPosition
	}
	return nil
}

func (m *CameraSettings) GetView_Eye() *Vec3 {
	if m != nil {
		return m.View_Eye
	}
	return nil
}

func (m *CameraSettings) GetView_Center() *Vec3 {
	if m != nil {
		return m.View_Center
	}
	return nil
}

func (m *CameraSettings) GetView_Up() *Vec3 {
	if m != nil {
		return m.View_Up
	}
	return nil
}

func (m *CameraSettings) GetPositionX() *ObjectCoordinate {
	if m != nil {
		return m.PositionX
	}
	return nil
}

func (m *CameraSettings) GetPositionY() *ObjectCoordinate {
	if m != nil {
		return m.PositionY
	}
	return nil
}

func (m *CameraSettings) GetPositionZ() *ObjectCoordinate {
	if m != nil {
		return m.PositionZ
	}
	return nil
}

func (m *CameraSettings) GetRotateX() *ObjectCoordinate {
	if m != nil {
		return m.RotateX
	}
	return nil
}

func (m *CameraSettings) GetRotateY() *ObjectCoordinate {
	if m != nil {
		return m.RotateY
	}
	return nil
}

func (m *CameraSettings) GetRotateZ() *ObjectCoordinate {
	if m != nil {
		return m.RotateZ
	}
	return nil
}

func (m *CameraSettings) GetRotateCenterX() *ObjectCoordinate {
	if m != nil {
		return m.RotateCenterX
	}
	return nil
}

func (m *CameraSettings) GetRotateCenterY() *ObjectCoordinate {
	if m != nil {
		return m.RotateCenterY
	}
	return nil
}

func (m *CameraSettings) GetRotateCenterZ() *ObjectCoordinate {
	if m != nil {
		return m.RotateCenterZ
	}
	return nil
}

type GridSettings struct {
	ActAsMirror          *bool             `protobuf:"varint,1,req,name=actAsMirror" json:"actAsMirror,omitempty"`
	GridSize             *int32            `protobuf:"varint,2,req,name=gridSize" json:"gridSize,omitempty"`
	PositionX            *ObjectCoordinate `protobuf:"bytes,3,req,name=positionX" json:"positionX,omitempty"`
	PositionY            *ObjectCoordinate `protobuf:"bytes,4,req,name=positionY" json:"positionY,omitempty"`
	PositionZ            *ObjectCoordinate `protobuf:"bytes,5,req,name=positionZ" json:"positionZ,omitempty"`
	RotateX              *ObjectCoordinate `protobuf:"bytes,6,req,name=rotateX" json:"rotateX,omitempty"`
	RotateY              *ObjectCoordinate `protobuf:"bytes,7,req,name=rotateY" json:"rotateY,omitempty"`
	RotateZ              *ObjectCoordinate `protobuf:"bytes,8,req,name=rotateZ" json:"rotateZ,omitempty"`
	ScaleX               *ObjectCoordinate `protobuf:"bytes,9,req,name=scaleX" json:"scaleX,omitempty"`
	ScaleY               *ObjectCoordinate `protobuf:"bytes,10,req,name=scaleY" json:"scaleY,omitempty"`
	ScaleZ               *ObjectCoordinate `protobuf:"bytes,11,req,name=scaleZ" json:"scaleZ,omitempty"`
	Transparency         *float32          `protobuf:"fixed32,12,req,name=transparency" json:"transparency,omitempty"`
	ShowGrid             *int32            `protobuf:"varint,13,req,name=showGrid" json:"showGrid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GridSettings) Reset()         { *m = GridSettings{} }
func (m *GridSettings) String() string { return proto.CompactTextString(m) }
func (*GridSettings) ProtoMessage()    {}
func (*GridSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d0f8268449b23b7, []int{2}
}

func (m *GridSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GridSettings.Unmarshal(m, b)
}
func (m *GridSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GridSettings.Marshal(b, m, deterministic)
}
func (m *GridSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GridSettings.Merge(m, src)
}
func (m *GridSettings) XXX_Size() int {
	return xxx_messageInfo_GridSettings.Size(m)
}
func (m *GridSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_GridSettings.DiscardUnknown(m)
}

var xxx_messageInfo_GridSettings proto.InternalMessageInfo

func (m *GridSettings) GetActAsMirror() bool {
	if m != nil && m.ActAsMirror != nil {
		return *m.ActAsMirror
	}
	return false
}

func (m *GridSettings) GetGridSize() int32 {
	if m != nil && m.GridSize != nil {
		return *m.GridSize
	}
	return 0
}

func (m *GridSettings) GetPositionX() *ObjectCoordinate {
	if m != nil {
		return m.PositionX
	}
	return nil
}

func (m *GridSettings) GetPositionY() *ObjectCoordinate {
	if m != nil {
		return m.PositionY
	}
	return nil
}

func (m *GridSettings) GetPositionZ() *ObjectCoordinate {
	if m != nil {
		return m.PositionZ
	}
	return nil
}

func (m *GridSettings) GetRotateX() *ObjectCoordinate {
	if m != nil {
		return m.RotateX
	}
	return nil
}

func (m *GridSettings) GetRotateY() *ObjectCoordinate {
	if m != nil {
		return m.RotateY
	}
	return nil
}

func (m *GridSettings) GetRotateZ() *ObjectCoordinate {
	if m != nil {
		return m.RotateZ
	}
	return nil
}

func (m *GridSettings) GetScaleX() *ObjectCoordinate {
	if m != nil {
		return m.ScaleX
	}
	return nil
}

func (m *GridSettings) GetScaleY() *ObjectCoordinate {
	if m != nil {
		return m.ScaleY
	}
	return nil
}

func (m *GridSettings) GetScaleZ() *ObjectCoordinate {
	if m != nil {
		return m.ScaleZ
	}
	return nil
}

func (m *GridSettings) GetTransparency() float32 {
	if m != nil && m.Transparency != nil {
		return *m.Transparency
	}
	return 0
}

func (m *GridSettings) GetShowGrid() int32 {
	if m != nil && m.ShowGrid != nil {
		return *m.ShowGrid
	}
	return 0
}

type LightObject struct {
	Title                *string           `protobuf:"bytes,1,req,name=title" json:"title,omitempty"`
	Description          *string           `protobuf:"bytes,2,req,name=description" json:"description,omitempty"`
	Type                 *int32            `protobuf:"varint,3,req,name=type" json:"type,omitempty"`
	ShowLampObject       *bool             `protobuf:"varint,4,req,name=showLampObject" json:"showLampObject,omitempty"`
	ShowLampDirection    *bool             `protobuf:"varint,5,req,name=showLampDirection" json:"showLampDirection,omitempty"`
	ShowInWire           *bool             `protobuf:"varint,6,req,name=showInWire" json:"showInWire,omitempty"`
	PositionX            *ObjectCoordinate `protobuf:"bytes,7,req,name=positionX" json:"positionX,omitempty"`
	PositionY            *ObjectCoordinate `protobuf:"bytes,8,req,name=positionY" json:"positionY,omitempty"`
	PositionZ            *ObjectCoordinate `protobuf:"bytes,9,req,name=positionZ" json:"positionZ,omitempty"`
	DirectionX           *ObjectCoordinate `protobuf:"bytes,10,req,name=directionX" json:"directionX,omitempty"`
	DirectionY           *ObjectCoordinate `protobuf:"bytes,11,req,name=directionY" json:"directionY,omitempty"`
	DirectionZ           *ObjectCoordinate `protobuf:"bytes,12,req,name=directionZ" json:"directionZ,omitempty"`
	ScaleX               *ObjectCoordinate `protobuf:"bytes,13,req,name=scaleX" json:"scaleX,omitempty"`
	ScaleY               *ObjectCoordinate `protobuf:"bytes,14,req,name=scaleY" json:"scaleY,omitempty"`
	ScaleZ               *ObjectCoordinate `protobuf:"bytes,15,req,name=scaleZ" json:"scaleZ,omitempty"`
	RotateX              *ObjectCoordinate `protobuf:"bytes,16,req,name=rotateX" json:"rotateX,omitempty"`
	RotateY              *ObjectCoordinate `protobuf:"bytes,17,req,name=rotateY" json:"rotateY,omitempty"`
	RotateZ              *ObjectCoordinate `protobuf:"bytes,18,req,name=rotateZ" json:"rotateZ,omitempty"`
	RotateCenterX        *ObjectCoordinate `protobuf:"bytes,19,req,name=rotateCenterX" json:"rotateCenterX,omitempty"`
	RotateCenterY        *ObjectCoordinate `protobuf:"bytes,20,req,name=rotateCenterY" json:"rotateCenterY,omitempty"`
	RotateCenterZ        *ObjectCoordinate `protobuf:"bytes,21,req,name=rotateCenterZ" json:"rotateCenterZ,omitempty"`
	Ambient              *MaterialColor    `protobuf:"bytes,22,req,name=ambient" json:"ambient,omitempty"`
	Diffuse              *MaterialColor    `protobuf:"bytes,23,req,name=diffuse" json:"diffuse,omitempty"`
	Specular             *MaterialColor    `protobuf:"bytes,24,req,name=specular" json:"specular,omitempty"`
	LCutOff              *ObjectCoordinate `protobuf:"bytes,25,req,name=lCutOff" json:"lCutOff,omitempty"`
	LOuterCutOff         *ObjectCoordinate `protobuf:"bytes,26,req,name=lOuterCutOff" json:"lOuterCutOff,omitempty"`
	LConstant            *ObjectCoordinate `protobuf:"bytes,27,req,name=lConstant" json:"lConstant,omitempty"`
	LLinear              *ObjectCoordinate `protobuf:"bytes,28,req,name=lLinear" json:"lLinear,omitempty"`
	LQuadratic           *ObjectCoordinate `protobuf:"bytes,29,req,name=lQuadratic" json:"lQuadratic,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LightObject) Reset()         { *m = LightObject{} }
func (m *LightObject) String() string { return proto.CompactTextString(m) }
func (*LightObject) ProtoMessage()    {}
func (*LightObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d0f8268449b23b7, []int{3}
}

func (m *LightObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LightObject.Unmarshal(m, b)
}
func (m *LightObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LightObject.Marshal(b, m, deterministic)
}
func (m *LightObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LightObject.Merge(m, src)
}
func (m *LightObject) XXX_Size() int {
	return xxx_messageInfo_LightObject.Size(m)
}
func (m *LightObject) XXX_DiscardUnknown() {
	xxx_messageInfo_LightObject.DiscardUnknown(m)
}

var xxx_messageInfo_LightObject proto.InternalMessageInfo

func (m *LightObject) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *LightObject) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *LightObject) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *LightObject) GetShowLampObject() bool {
	if m != nil && m.ShowLampObject != nil {
		return *m.ShowLampObject
	}
	return false
}

func (m *LightObject) GetShowLampDirection() bool {
	if m != nil && m.ShowLampDirection != nil {
		return *m.ShowLampDirection
	}
	return false
}

func (m *LightObject) GetShowInWire() bool {
	if m != nil && m.ShowInWire != nil {
		return *m.ShowInWire
	}
	return false
}

func (m *LightObject) GetPositionX() *ObjectCoordinate {
	if m != nil {
		return m.PositionX
	}
	return nil
}

func (m *LightObject) GetPositionY() *ObjectCoordinate {
	if m != nil {
		return m.PositionY
	}
	return nil
}

func (m *LightObject) GetPositionZ() *ObjectCoordinate {
	if m != nil {
		return m.PositionZ
	}
	return nil
}

func (m *LightObject) GetDirectionX() *ObjectCoordinate {
	if m != nil {
		return m.DirectionX
	}
	return nil
}

func (m *LightObject) GetDirectionY() *ObjectCoordinate {
	if m != nil {
		return m.DirectionY
	}
	return nil
}

func (m *LightObject) GetDirectionZ() *ObjectCoordinate {
	if m != nil {
		return m.DirectionZ
	}
	return nil
}

func (m *LightObject) GetScaleX() *ObjectCoordinate {
	if m != nil {
		return m.ScaleX
	}
	return nil
}

func (m *LightObject) GetScaleY() *ObjectCoordinate {
	if m != nil {
		return m.ScaleY
	}
	return nil
}

func (m *LightObject) GetScaleZ() *ObjectCoordinate {
	if m != nil {
		return m.ScaleZ
	}
	return nil
}

func (m *LightObject) GetRotateX() *ObjectCoordinate {
	if m != nil {
		return m.RotateX
	}
	return nil
}

func (m *LightObject) GetRotateY() *ObjectCoordinate {
	if m != nil {
		return m.RotateY
	}
	return nil
}

func (m *LightObject) GetRotateZ() *ObjectCoordinate {
	if m != nil {
		return m.RotateZ
	}
	return nil
}

func (m *LightObject) GetRotateCenterX() *ObjectCoordinate {
	if m != nil {
		return m.RotateCenterX
	}
	return nil
}

func (m *LightObject) GetRotateCenterY() *ObjectCoordinate {
	if m != nil {
		return m.RotateCenterY
	}
	return nil
}

func (m *LightObject) GetRotateCenterZ() *ObjectCoordinate {
	if m != nil {
		return m.RotateCenterZ
	}
	return nil
}

func (m *LightObject) GetAmbient() *MaterialColor {
	if m != nil {
		return m.Ambient
	}
	return nil
}

func (m *LightObject) GetDiffuse() *MaterialColor {
	if m != nil {
		return m.Diffuse
	}
	return nil
}

func (m *LightObject) GetSpecular() *MaterialColor {
	if m != nil {
		return m.Specular
	}
	return nil
}

func (m *LightObject) GetLCutOff() *ObjectCoordinate {
	if m != nil {
		return m.LCutOff
	}
	return nil
}

func (m *LightObject) GetLOuterCutOff() *ObjectCoordinate {
	if m != nil {
		return m.LOuterCutOff
	}
	return nil
}

func (m *LightObject) GetLConstant() *ObjectCoordinate {
	if m != nil {
		return m.LConstant
	}
	return nil
}

func (m *LightObject) GetLLinear() *ObjectCoordinate {
	if m != nil {
		return m.LLinear
	}
	return nil
}

func (m *LightObject) GetLQuadratic() *ObjectCoordinate {
	if m != nil {
		return m.LQuadratic
	}
	return nil
}

func init() {
	proto.RegisterType((*GUISettings)(nil), "saveopen.GUISettings")
	proto.RegisterType((*CameraSettings)(nil), "saveopen.CameraSettings")
	proto.RegisterType((*GridSettings)(nil), "saveopen.GridSettings")
	proto.RegisterType((*LightObject)(nil), "saveopen.LightObject")
}

func init() { proto.RegisterFile("KuplungAppSettings.proto", fileDescriptor_8d0f8268449b23b7) }

var fileDescriptor_8d0f8268449b23b7 = []byte{
	// 1506 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x97, 0x5b, 0x57, 0xdb, 0x46,
	0x10, 0xc7, 0x4f, 0x1d, 0x0c, 0x66, 0x0c, 0x24, 0x2c, 0x10, 0x16, 0x92, 0x80, 0x4b, 0x73, 0x21,
	0x69, 0x2e, 0x0d, 0x49, 0xef, 0x27, 0x69, 0x28, 0x97, 0x84, 0xd3, 0xa4, 0x50, 0x39, 0x10, 0xec,
	0x17, 0x9f, 0xc5, 0x5e, 0xec, 0x2d, 0xb2, 0xa4, 0xb3, 0x5a, 0x87, 0xd0, 0xaf, 0xdb, 0x6f, 0xd0,
	0x97, 0xf6, 0xb1, 0x47, 0xa3, 0x95, 0xb4, 0x92, 0x0d, 0x36, 0xce, 0x9b, 0x3d, 0xf3, 0xfb, 0x8f,
	0xf6, 0x32, 0x3b, 0x3b, 0x0b, 0xf4, 0xb7, 0x8e, 0x67, 0x77, 0x9c, 0xe6, 0xba, 0xe7, 0x95, 0xb9,
	0x52, 0xc2, 0x69, 0xfa, 0x8f, 0x3d, 0xe9, 0x2a, 0x97, 0x14, 0x7c, 0xf6, 0x91, 0xbb, 0x1e, 0x77,
	0x16, 0x23, 0x66, 0x93, 0x1f, 0x0b, 0x47, 0x28, 0xe1, 0x3a, 0x9a, 0x59, 0xf9, 0x77, 0x06, 0x8a,
	0xaf, 0xf7, 0x77, 0x22, 0x25, 0x59, 0x86, 0xa2, 0xfe, 0x5d, 0xdb, 0xde, 0x3d, 0xa0, 0x5f, 0x94,
	0x72, 0xab, 0x39, 0x0b, 0xb4, 0x69, 0x7b, 0xf7, 0x80, 0xfc, 0x08, 0x34, 0x02, 0x76, 0x3b, 0xca,
	0x16, 0x0e, 0x7f, 0xdf, 0x12, 0xf5, 0x13, 0x87, 0xfb, 0x3e, 0xcd, 0x21, 0x3d, 0xaf, 0xfd, 0x59,
	0x37, 0x79, 0x04, 0x24, 0x92, 0x5a, 0x4c, 0x09, 0xf7, 0x83, 0x68, 0xa8, 0x16, 0xbd, 0x82, 0xa2,
	0x69, 0xed, 0x49, 0x1c, 0xe4, 0x09, 0xcc, 0xa4, 0xf0, 0x37, 0x5c, 0x34, 0x5b, 0x8a, 0x8e, 0x20,
	0x4f, 0x4c, 0x3e, 0xf4, 0x98, 0xf1, 0xf7, 0x6c, 0xe6, 0xf0, 0x0d, 0xdb, 0xf5, 0x39, 0xcd, 0xa7,
	0xe2, 0x27, 0x0e, 0x72, 0x1f, 0xae, 0xa5, 0xf0, 0x6d, 0x26, 0xe9, 0x28, 0xc2, 0x57, 0x4d, 0x78,
	0x9b, 0x49, 0x13, 0x7d, 0x2d, 0x45, 0xa3, 0x2c, 0xfe, 0xe2, 0x74, 0xac, 0x94, 0x5b, 0xcd, 0xc7,
	0x68, 0x64, 0x26, 0x77, 0x60, 0x2a, 0x42, 0xcb, 0x27, 0x67, 0x47, 0xee, 0x27, 0x5a, 0x40, 0x70,
	0x52, 0x5b, 0x43, 0x23, 0x59, 0x87, 0xd9, 0xcc, 0x32, 0x6e, 0xb8, 0xb6, 0x2b, 0xe9, 0x78, 0x29,
	0xb7, 0x5a, 0x5c, 0x9b, 0x7a, 0x1c, 0x6d, 0xdd, 0xe3, 0x03, 0x5e, 0x7f, 0x6e, 0xcd, 0xa4, 0x97,
	0x14, 0x51, 0xb2, 0x05, 0xd7, 0xa3, 0x10, 0xfb, 0x3b, 0xeb, 0xed, 0x23, 0xc1, 0x1d, 0xf5, 0x16,
	0x97, 0x08, 0x7a, 0x04, 0x79, 0x66, 0xcd, 0x69, 0x3a, 0x0d, 0x93, 0x6f, 0x93, 0x30, 0xdb, 0xe2,
	0x13, 0x6f, 0x04, 0x33, 0xf9, 0xe0, 0x4a, 0xbb, 0x41, 0x8b, 0xa5, 0xdc, 0x6a, 0x21, 0x96, 0xa5,
	0x9d, 0x64, 0x0b, 0x96, 0x7a, 0x4d, 0x60, 0x4f, 0xd4, 0x4f, 0xb8, 0xdc, 0xf5, 0xb8, 0x43, 0x27,
	0x50, 0x7e, 0xab, 0xc7, 0xd0, 0x13, 0x88, 0x7c, 0x0f, 0xf3, 0xf1, 0x72, 0xb5, 0xdc, 0xd3, 0xf5,
	0x4f, 0xc2, 0x7f, 0xc3, 0x6d, 0x8f, 0x4b, 0x9f, 0x4e, 0xa2, 0x3e, 0x1a, 0x5c, 0xc6, 0x6b, 0x6c,
	0xb6, 0x8f, 0xca, 0x6a, 0xe0, 0xa4, 0x53, 0xa8, 0x89, 0x36, 0xdb, 0x8f, 0x1d, 0x66, 0xda, 0x6e,
	0xf2, 0x63, 0x2e, 0x25, 0x6f, 0xbc, 0xe7, 0xbe, 0x7a, 0xe7, 0x36, 0x38, 0xbd, 0x8a, 0xa2, 0x68,
	0x1c, 0x59, 0x37, 0x79, 0x01, 0x8b, 0xbd, 0xa4, 0xb8, 0x7a, 0x3e, 0xbd, 0x86, 0xe2, 0x85, 0x1e,
	0xe2, 0x10, 0x20, 0xbf, 0x42, 0xb4, 0x04, 0x35, 0xb4, 0x04, 0x79, 0xc5, 0x7c, 0xbf, 0xb6, 0x29,
	0xd9, 0x29, 0x7e, 0x7e, 0x1a, 0xf3, 0xe3, 0x86, 0x86, 0x4c, 0x26, 0x42, 0xc8, 0x0e, 0x94, 0xce,
	0x1f, 0xc2, 0xef, 0x9d, 0xf6, 0x11, 0x97, 0x94, 0x60, 0x98, 0xe5, 0x73, 0x07, 0x12, 0x62, 0xe4,
	0x35, 0x2c, 0x67, 0x43, 0xe9, 0x74, 0x28, 0x2b, 0xc9, 0x9d, 0xa6, 0x6a, 0xd1, 0x19, 0x3c, 0x04,
	0x4b, 0x99, 0x48, 0x19, 0x8a, 0xdc, 0x86, 0xc9, 0x8f, 0x82, 0xe3, 0xf8, 0xec, 0xf2, 0x89, 0x70,
	0xe8, 0x6c, 0x98, 0xe7, 0x29, 0x23, 0xe6, 0xb9, 0x6b, 0x8b, 0x06, 0x8e, 0xa1, 0xb6, 0x29, 0x24,
	0xaf, 0x07, 0xe5, 0x87, 0xce, 0xf5, 0x4c, 0xd1, 0x99, 0x84, 0x8d, 0x51, 0xb2, 0x03, 0xd4, 0x08,
	0xf1, 0x8e, 0x29, 0x2e, 0x05, 0xb3, 0xc3, 0xe3, 0x72, 0xbd, 0x67, 0x98, 0xf9, 0x84, 0x4f, 0xe1,
	0xe4, 0x05, 0x10, 0x23, 0x94, 0x9e, 0x11, 0x9d, 0xef, 0x19, 0x64, 0x3a, 0x21, 0x35, 0x98, 0x91,
	0x6f, 0x8a, 0xe3, 0xe3, 0x8e, 0xcf, 0x29, 0xed, 0x27, 0xd7, 0x20, 0xf9, 0x05, 0x8c, 0xf9, 0xd5,
	0xca, 0x1e, 0xaf, 0x77, 0x6c, 0x26, 0xe9, 0x42, 0x4f, 0xbd, 0xf1, 0xa5, 0x88, 0x24, 0x2f, 0xe1,
	0x46, 0xf7, 0xf0, 0x6b, 0xf1, 0xbe, 0x2d, 0xe2, 0xbe, 0x2d, 0x74, 0x8d, 0x3b, 0xde, 0xb2, 0xb4,
	0x5e, 0x0f, 0x2b, 0xd1, 0xdf, 0xc8, 0xea, 0x35, 0x11, 0xeb, 0x5f, 0xc1, 0xcd, 0x1e, 0x13, 0x48,
	0x02, 0xdc, 0xc4, 0x00, 0x8b, 0xdd, 0x23, 0x8f, 0x23, 0xec, 0xc1, 0xed, 0xf3, 0xf6, 0xb2, 0x66,
	0x94, 0x06, 0x7a, 0x0b, 0x4f, 0xd5, 0xca, 0x39, 0xfb, 0x68, 0x90, 0x64, 0x13, 0x96, 0x7a, 0xac,
	0x89, 0x19, 0x6b, 0x09, 0x63, 0xdd, 0xec, 0x5a, 0x96, 0xf3, 0xa3, 0x44, 0x2b, 0x63, 0x46, 0x59,
	0xce, 0x46, 0xd1, 0x90, 0x19, 0x65, 0x1b, 0x96, 0x7b, 0xad, 0x8f, 0x19, 0xa6, 0xa4, 0x8b, 0x62,
	0xd7, 0x12, 0x99, 0x71, 0x8c, 0x9b, 0x2f, 0xa8, 0x60, 0xef, 0xb9, 0x94, 0x4c, 0x38, 0xf4, 0x4b,
	0xd4, 0x12, 0xa3, 0x20, 0x6a, 0x0f, 0x79, 0x9a, 0xdc, 0x26, 0xda, 0x84, 0x27, 0x90, 0xae, 0xa0,
	0x22, 0x0a, 0x66, 0xba, 0xcc, 0xc2, 0xab, 0xed, 0xeb, 0x8e, 0x68, 0x33, 0xc5, 0x0f, 0xe9, 0x57,
	0xa9, 0xc2, 0x9b, 0xf1, 0x9e, 0x2f, 0xac, 0xd0, 0xdb, 0x17, 0x08, 0x2b, 0xe4, 0x2e, 0x4c, 0xb5,
	0xf0, 0xa2, 0x6e, 0x33, 0x6f, 0xa7, 0xcd, 0x9a, 0x9c, 0xde, 0x29, 0xe5, 0x56, 0xc7, 0xad, 0x8c,
	0xb5, 0xc7, 0x64, 0xc2, 0x46, 0xe1, 0x2e, 0xd6, 0x97, 0xcc, 0x64, 0xc2, 0x56, 0xe1, 0x19, 0xcc,
	0x65, 0x24, 0xba, 0x59, 0xb8, 0x87, 0x9a, 0xd9, 0xb4, 0x46, 0xb7, 0x0b, 0x86, 0x28, 0x58, 0xcb,
	0xb2, 0xc7, 0xea, 0xdc, 0x6f, 0x09, 0x8f, 0xae, 0xe2, 0x34, 0x66, 0x8d, 0x75, 0x8e, 0x7d, 0xe4,
	0x67, 0x58, 0x88, 0x3b, 0x01, 0xee, 0x70, 0xc9, 0x14, 0x4f, 0x84, 0xf7, 0x51, 0x18, 0x5d, 0x34,
	0x5d, 0x7e, 0xf2, 0x0d, 0x8c, 0xd6, 0x59, 0x9b, 0x4b, 0x46, 0x1f, 0xe0, 0x99, 0xa7, 0xc9, 0x99,
	0xdf, 0x40, 0x7b, 0x74, 0x6f, 0x59, 0x9a, 0x23, 0x0f, 0x60, 0xa4, 0x29, 0x45, 0x83, 0x7e, 0x8d,
	0xfc, 0xf5, 0x84, 0xc7, 0x7e, 0x23, 0xa2, 0x91, 0x21, 0x8f, 0x60, 0xd4, 0x0e, 0xef, 0xa4, 0x87,
	0xa5, 0x2b, 0xab, 0xc5, 0xb5, 0xb9, 0x84, 0xc6, 0x4c, 0xdb, 0x3d, 0xfa, 0x93, 0xd7, 0x95, 0xa5,
	0xa1, 0x95, 0xbf, 0xf3, 0x30, 0x95, 0xfe, 0x2a, 0xf9, 0x0e, 0xa6, 0xc2, 0xef, 0xee, 0xb9, 0x3e,
	0x76, 0x89, 0xd8, 0xff, 0x75, 0xd7, 0xa6, 0x0c, 0x45, 0xee, 0x43, 0xe1, 0x40, 0xf0, 0xd3, 0xda,
	0xd6, 0x19, 0xc7, 0x1e, 0xb0, 0x5b, 0x31, 0x16, 0xf8, 0xb7, 0xce, 0x38, 0x79, 0x02, 0x45, 0x44,
	0x37, 0xb8, 0xa3, 0xb8, 0xc4, 0xe6, 0xaf, 0x9b, 0x86, 0x00, 0x09, 0x09, 0x72, 0x0f, 0x50, 0x5b,
	0xdb, 0xf7, 0xb0, 0xf3, 0xeb, 0x86, 0x47, 0x03, 0xf7, 0xbe, 0x47, 0x7e, 0x80, 0x71, 0x4f, 0x0f,
	0xe8, 0x10, 0x9b, 0xbe, 0xe2, 0xda, 0x62, 0x82, 0x86, 0x93, 0xdf, 0x70, 0x5d, 0xd9, 0x10, 0x0e,
	0x53, 0xdc, 0x4a, 0x60, 0x53, 0x59, 0xc1, 0x0e, 0x70, 0x40, 0x65, 0xc5, 0x54, 0x56, 0xb1, 0x21,
	0x1c, 0x50, 0x59, 0x25, 0xcf, 0x61, 0x4c, 0xba, 0x0a, 0x8f, 0x5b, 0xa1, 0xaf, 0x2e, 0x42, 0x13,
	0x55, 0x45, 0x37, 0x8a, 0x03, 0xa8, 0x2a, 0x89, 0xaa, 0xaa, 0x3b, 0xc3, 0x01, 0x54, 0x55, 0xf2,
	0x0a, 0x26, 0xc3, 0x9f, 0xe1, 0x46, 0x1c, 0x62, 0x3b, 0x78, 0xb1, 0x36, 0x2d, 0xc8, 0x46, 0xa8,
	0x60, 0x47, 0x78, 0x89, 0x08, 0x95, 0x6c, 0x84, 0x2a, 0xf6, 0x84, 0x97, 0x88, 0x50, 0x5d, 0xf9,
	0x6f, 0x04, 0x26, 0xcc, 0xb3, 0x42, 0x4a, 0x50, 0x64, 0x75, 0xb5, 0xee, 0xbf, 0x13, 0x52, 0xba,
	0x12, 0x13, 0xbc, 0x60, 0x99, 0x26, 0xb2, 0x08, 0x85, 0x66, 0xd4, 0xe4, 0xe7, 0xb0, 0x7e, 0xc4,
	0xff, 0xd3, 0x49, 0x76, 0x65, 0xe8, 0x24, 0x1b, 0x19, 0x3a, 0xc9, 0xf2, 0x43, 0x26, 0xd9, 0xe8,
	0x50, 0x49, 0x36, 0x36, 0x54, 0x92, 0x15, 0x06, 0x4f, 0xb2, 0x35, 0x18, 0xf5, 0xeb, 0xcc, 0xe6,
	0x87, 0x03, 0xe4, 0xb3, 0x26, 0x63, 0x4d, 0x65, 0x80, 0x6c, 0xd6, 0x64, 0xac, 0xa9, 0x0e, 0x90,
	0xc5, 0x9a, 0x24, 0x2b, 0x30, 0xa1, 0x24, 0x73, 0x7c, 0x8f, 0x49, 0xee, 0xd4, 0xcf, 0x30, 0x7b,
	0x73, 0x56, 0xca, 0x16, 0xe4, 0x8a, 0xdf, 0x72, 0x4f, 0x83, 0x0c, 0xc3, 0xdc, 0xcc, 0x5b, 0xf1,
	0xff, 0x95, 0x7f, 0x8a, 0x50, 0x34, 0x0a, 0x2f, 0x99, 0x85, 0xbc, 0x12, 0xca, 0xe6, 0x98, 0x73,
	0xe3, 0x56, 0xf8, 0x27, 0xc8, 0xc7, 0x06, 0xf7, 0xeb, 0x52, 0x78, 0x58, 0x70, 0x73, 0xe8, 0x33,
	0x4d, 0x84, 0xc0, 0x88, 0x3a, 0xf3, 0x38, 0xa6, 0x5b, 0xde, 0xc2, 0xdf, 0xc1, 0x5d, 0x1a, 0x7c,
	0xe7, 0x2d, 0x6b, 0x7b, 0x61, 0x74, 0x4c, 0xa9, 0x82, 0x95, 0xb1, 0x92, 0x87, 0x30, 0x1d, 0x59,
	0x92, 0xde, 0x3b, 0x1f, 0x3e, 0x92, 0xba, 0x1c, 0x64, 0x09, 0x20, 0x30, 0xee, 0x38, 0x1f, 0x84,
	0xe4, 0x98, 0x32, 0x05, 0xcb, 0xb0, 0xa4, 0xb3, 0x7f, 0x6c, 0xe8, 0xec, 0x2f, 0x0c, 0x9d, 0xfd,
	0xe3, 0x97, 0xc9, 0xfe, 0x9f, 0x00, 0x1a, 0xd1, 0xd4, 0x0e, 0x07, 0xc8, 0x15, 0x83, 0x4e, 0x69,
	0x2b, 0x03, 0xe4, 0x8c, 0x41, 0xa7, 0xb4, 0xd5, 0x01, 0x6a, 0x9e, 0x41, 0x1b, 0xe7, 0x61, 0x72,
	0x88, 0xf3, 0x30, 0x35, 0xc4, 0x79, 0xb8, 0x3a, 0xf0, 0x79, 0x30, 0xaa, 0xc9, 0xb5, 0xa1, 0xaa,
	0xc9, 0xf4, 0x50, 0xd5, 0x84, 0x7c, 0xc6, 0x95, 0x35, 0xf3, 0xd9, 0x57, 0xd6, 0xec, 0x67, 0x5f,
	0x59, 0x73, 0x97, 0xbc, 0xb2, 0xc8, 0x53, 0x18, 0x63, 0xfa, 0x65, 0x1a, 0x3e, 0x6f, 0xe7, 0x13,
	0x6d, 0xea, 0x19, 0x64, 0x45, 0x5c, 0x20, 0x69, 0xe8, 0xd7, 0xe8, 0x7c, 0x1f, 0x89, 0xe6, 0xc8,
	0x33, 0x28, 0xf8, 0xd1, 0x0b, 0x94, 0x5e, 0xac, 0x89, 0xc1, 0x60, 0x5b, 0xec, 0x8d, 0x8e, 0xda,
	0x3d, 0x3e, 0xd6, 0xaf, 0xd6, 0x0b, 0xb7, 0x45, 0xa3, 0xe4, 0x25, 0x4c, 0xd8, 0xbb, 0x1d, 0xc5,
	0xa5, 0x96, 0x2e, 0xf6, 0x95, 0xa6, 0xf8, 0xa0, 0x04, 0xd8, 0x1b, 0xae, 0xe3, 0x2b, 0xe6, 0x28,
	0x7c, 0xa4, 0xf6, 0x29, 0x01, 0x31, 0x8c, 0xe3, 0x7d, 0x2b, 0x1c, 0xce, 0x24, 0xbe, 0x4d, 0xfb,
	0x8d, 0x37, 0x44, 0x83, 0x03, 0x6c, 0xff, 0xd1, 0x61, 0x0d, 0xc9, 0x94, 0xa8, 0xe3, 0x53, 0xb4,
	0xcf, 0x01, 0x4e, 0xe8, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x3e, 0xd2, 0x18, 0xf3, 0x8e, 0x15,
	0x00, 0x00,
}
