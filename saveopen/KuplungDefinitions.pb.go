// Code generated by protoc-gen-go. DO NOT EDIT.
// source: KuplungDefinitions.proto

package saveopen

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Vec2 struct {
	X                    *float32 `protobuf:"fixed32,1,req,name=x" json:"x,omitempty"`
	Y                    *float32 `protobuf:"fixed32,2,req,name=y" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vec2) Reset()         { *m = Vec2{} }
func (m *Vec2) String() string { return proto.CompactTextString(m) }
func (*Vec2) ProtoMessage()    {}
func (*Vec2) Descriptor() ([]byte, []int) {
	return fileDescriptor_caea9955171986a8, []int{0}
}

func (m *Vec2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vec2.Unmarshal(m, b)
}
func (m *Vec2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vec2.Marshal(b, m, deterministic)
}
func (m *Vec2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vec2.Merge(m, src)
}
func (m *Vec2) XXX_Size() int {
	return xxx_messageInfo_Vec2.Size(m)
}
func (m *Vec2) XXX_DiscardUnknown() {
	xxx_messageInfo_Vec2.DiscardUnknown(m)
}

var xxx_messageInfo_Vec2 proto.InternalMessageInfo

func (m *Vec2) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Vec2) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

type Vec3 struct {
	X                    *float32 `protobuf:"fixed32,1,req,name=x" json:"x,omitempty"`
	Y                    *float32 `protobuf:"fixed32,2,req,name=y" json:"y,omitempty"`
	Z                    *float32 `protobuf:"fixed32,3,req,name=z" json:"z,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vec3) Reset()         { *m = Vec3{} }
func (m *Vec3) String() string { return proto.CompactTextString(m) }
func (*Vec3) ProtoMessage()    {}
func (*Vec3) Descriptor() ([]byte, []int) {
	return fileDescriptor_caea9955171986a8, []int{1}
}

func (m *Vec3) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vec3.Unmarshal(m, b)
}
func (m *Vec3) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vec3.Marshal(b, m, deterministic)
}
func (m *Vec3) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vec3.Merge(m, src)
}
func (m *Vec3) XXX_Size() int {
	return xxx_messageInfo_Vec3.Size(m)
}
func (m *Vec3) XXX_DiscardUnknown() {
	xxx_messageInfo_Vec3.DiscardUnknown(m)
}

var xxx_messageInfo_Vec3 proto.InternalMessageInfo

func (m *Vec3) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Vec3) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *Vec3) GetZ() float32 {
	if m != nil && m.Z != nil {
		return *m.Z
	}
	return 0
}

type Vec4 struct {
	X                    *float32 `protobuf:"fixed32,1,req,name=x" json:"x,omitempty"`
	Y                    *float32 `protobuf:"fixed32,2,req,name=y" json:"y,omitempty"`
	Z                    *float32 `protobuf:"fixed32,3,req,name=z" json:"z,omitempty"`
	W                    *float32 `protobuf:"fixed32,4,req,name=w" json:"w,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vec4) Reset()         { *m = Vec4{} }
func (m *Vec4) String() string { return proto.CompactTextString(m) }
func (*Vec4) ProtoMessage()    {}
func (*Vec4) Descriptor() ([]byte, []int) {
	return fileDescriptor_caea9955171986a8, []int{2}
}

func (m *Vec4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vec4.Unmarshal(m, b)
}
func (m *Vec4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vec4.Marshal(b, m, deterministic)
}
func (m *Vec4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vec4.Merge(m, src)
}
func (m *Vec4) XXX_Size() int {
	return xxx_messageInfo_Vec4.Size(m)
}
func (m *Vec4) XXX_DiscardUnknown() {
	xxx_messageInfo_Vec4.DiscardUnknown(m)
}

var xxx_messageInfo_Vec4 proto.InternalMessageInfo

func (m *Vec4) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Vec4) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *Vec4) GetZ() float32 {
	if m != nil && m.Z != nil {
		return *m.Z
	}
	return 0
}

func (m *Vec4) GetW() float32 {
	if m != nil && m.W != nil {
		return *m.W
	}
	return 0
}

type ObjectCoordinate struct {
	Animate              *bool    `protobuf:"varint,1,req,name=animate" json:"animate,omitempty"`
	Point                *float32 `protobuf:"fixed32,2,req,name=point" json:"point,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjectCoordinate) Reset()         { *m = ObjectCoordinate{} }
func (m *ObjectCoordinate) String() string { return proto.CompactTextString(m) }
func (*ObjectCoordinate) ProtoMessage()    {}
func (*ObjectCoordinate) Descriptor() ([]byte, []int) {
	return fileDescriptor_caea9955171986a8, []int{3}
}

func (m *ObjectCoordinate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectCoordinate.Unmarshal(m, b)
}
func (m *ObjectCoordinate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectCoordinate.Marshal(b, m, deterministic)
}
func (m *ObjectCoordinate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectCoordinate.Merge(m, src)
}
func (m *ObjectCoordinate) XXX_Size() int {
	return xxx_messageInfo_ObjectCoordinate.Size(m)
}
func (m *ObjectCoordinate) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectCoordinate.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectCoordinate proto.InternalMessageInfo

func (m *ObjectCoordinate) GetAnimate() bool {
	if m != nil && m.Animate != nil {
		return *m.Animate
	}
	return false
}

func (m *ObjectCoordinate) GetPoint() float32 {
	if m != nil && m.Point != nil {
		return *m.Point
	}
	return 0
}

type MaterialColor struct {
	ColorPickerOpen      *bool    `protobuf:"varint,1,req,name=colorPickerOpen" json:"colorPickerOpen,omitempty"`
	Animate              *bool    `protobuf:"varint,2,req,name=animate" json:"animate,omitempty"`
	Strength             *float32 `protobuf:"fixed32,3,req,name=strength" json:"strength,omitempty"`
	Color                *Vec3    `protobuf:"bytes,4,req,name=color" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaterialColor) Reset()         { *m = MaterialColor{} }
func (m *MaterialColor) String() string { return proto.CompactTextString(m) }
func (*MaterialColor) ProtoMessage()    {}
func (*MaterialColor) Descriptor() ([]byte, []int) {
	return fileDescriptor_caea9955171986a8, []int{4}
}

func (m *MaterialColor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaterialColor.Unmarshal(m, b)
}
func (m *MaterialColor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaterialColor.Marshal(b, m, deterministic)
}
func (m *MaterialColor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaterialColor.Merge(m, src)
}
func (m *MaterialColor) XXX_Size() int {
	return xxx_messageInfo_MaterialColor.Size(m)
}
func (m *MaterialColor) XXX_DiscardUnknown() {
	xxx_messageInfo_MaterialColor.DiscardUnknown(m)
}

var xxx_messageInfo_MaterialColor proto.InternalMessageInfo

func (m *MaterialColor) GetColorPickerOpen() bool {
	if m != nil && m.ColorPickerOpen != nil {
		return *m.ColorPickerOpen
	}
	return false
}

func (m *MaterialColor) GetAnimate() bool {
	if m != nil && m.Animate != nil {
		return *m.Animate
	}
	return false
}

func (m *MaterialColor) GetStrength() float32 {
	if m != nil && m.Strength != nil {
		return *m.Strength
	}
	return 0
}

func (m *MaterialColor) GetColor() *Vec3 {
	if m != nil {
		return m.Color
	}
	return nil
}

type MeshMaterialTextureImage struct {
	Filename             *string  `protobuf:"bytes,1,req,name=Filename" json:"Filename,omitempty"`
	Image                *string  `protobuf:"bytes,2,req,name=Image" json:"Image,omitempty"`
	Width                *int32   `protobuf:"varint,3,req,name=Width" json:"Width,omitempty"`
	Height               *int32   `protobuf:"varint,4,req,name=Height" json:"Height,omitempty"`
	UseTexture           *bool    `protobuf:"varint,5,req,name=UseTexture" json:"UseTexture,omitempty"`
	Commands             []string `protobuf:"bytes,6,rep,name=Commands" json:"Commands,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MeshMaterialTextureImage) Reset()         { *m = MeshMaterialTextureImage{} }
func (m *MeshMaterialTextureImage) String() string { return proto.CompactTextString(m) }
func (*MeshMaterialTextureImage) ProtoMessage()    {}
func (*MeshMaterialTextureImage) Descriptor() ([]byte, []int) {
	return fileDescriptor_caea9955171986a8, []int{5}
}

func (m *MeshMaterialTextureImage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeshMaterialTextureImage.Unmarshal(m, b)
}
func (m *MeshMaterialTextureImage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeshMaterialTextureImage.Marshal(b, m, deterministic)
}
func (m *MeshMaterialTextureImage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeshMaterialTextureImage.Merge(m, src)
}
func (m *MeshMaterialTextureImage) XXX_Size() int {
	return xxx_messageInfo_MeshMaterialTextureImage.Size(m)
}
func (m *MeshMaterialTextureImage) XXX_DiscardUnknown() {
	xxx_messageInfo_MeshMaterialTextureImage.DiscardUnknown(m)
}

var xxx_messageInfo_MeshMaterialTextureImage proto.InternalMessageInfo

func (m *MeshMaterialTextureImage) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *MeshMaterialTextureImage) GetImage() string {
	if m != nil && m.Image != nil {
		return *m.Image
	}
	return ""
}

func (m *MeshMaterialTextureImage) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *MeshMaterialTextureImage) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *MeshMaterialTextureImage) GetUseTexture() bool {
	if m != nil && m.UseTexture != nil {
		return *m.UseTexture
	}
	return false
}

func (m *MeshMaterialTextureImage) GetCommands() []string {
	if m != nil {
		return m.Commands
	}
	return nil
}

type MeshModelMaterial struct {
	MaterialID           *int32                    `protobuf:"varint,1,req,name=MaterialID" json:"MaterialID,omitempty"`
	MaterialTitle        *string                   `protobuf:"bytes,2,req,name=MaterialTitle" json:"MaterialTitle,omitempty"`
	AmbientColor         *Vec3                     `protobuf:"bytes,3,req,name=AmbientColor" json:"AmbientColor,omitempty"`
	DiffuseColor         *Vec3                     `protobuf:"bytes,4,req,name=DiffuseColor" json:"DiffuseColor,omitempty"`
	SpecularColor        *Vec3                     `protobuf:"bytes,5,req,name=SpecularColor" json:"SpecularColor,omitempty"`
	EmissionColor        *Vec3                     `protobuf:"bytes,6,req,name=EmissionColor" json:"EmissionColor,omitempty"`
	SpecularExp          *float32                  `protobuf:"fixed32,7,req,name=SpecularExp" json:"SpecularExp,omitempty"`
	Transparency         *float32                  `protobuf:"fixed32,8,req,name=Transparency" json:"Transparency,omitempty"`
	IlluminationMode     *uint32                   `protobuf:"fixed32,9,req,name=IlluminationMode" json:"IlluminationMode,omitempty"`
	OpticalDensity       *float32                  `protobuf:"fixed32,10,req,name=OpticalDensity" json:"OpticalDensity,omitempty"`
	TextureAmbient       *MeshMaterialTextureImage `protobuf:"bytes,11,req,name=TextureAmbient" json:"TextureAmbient,omitempty"`
	TextureDiffuse       *MeshMaterialTextureImage `protobuf:"bytes,12,req,name=TextureDiffuse" json:"TextureDiffuse,omitempty"`
	TextureSpecular      *MeshMaterialTextureImage `protobuf:"bytes,13,req,name=TextureSpecular" json:"TextureSpecular,omitempty"`
	TextureSpecularExp   *MeshMaterialTextureImage `protobuf:"bytes,14,req,name=TextureSpecularExp" json:"TextureSpecularExp,omitempty"`
	TextureDissolve      *MeshMaterialTextureImage `protobuf:"bytes,15,req,name=TextureDissolve" json:"TextureDissolve,omitempty"`
	TextureBump          *MeshMaterialTextureImage `protobuf:"bytes,16,req,name=TextureBump" json:"TextureBump,omitempty"`
	TextureDisplacement  *MeshMaterialTextureImage `protobuf:"bytes,17,req,name=TextureDisplacement" json:"TextureDisplacement,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *MeshModelMaterial) Reset()         { *m = MeshModelMaterial{} }
func (m *MeshModelMaterial) String() string { return proto.CompactTextString(m) }
func (*MeshModelMaterial) ProtoMessage()    {}
func (*MeshModelMaterial) Descriptor() ([]byte, []int) {
	return fileDescriptor_caea9955171986a8, []int{6}
}

func (m *MeshModelMaterial) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeshModelMaterial.Unmarshal(m, b)
}
func (m *MeshModelMaterial) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeshModelMaterial.Marshal(b, m, deterministic)
}
func (m *MeshModelMaterial) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeshModelMaterial.Merge(m, src)
}
func (m *MeshModelMaterial) XXX_Size() int {
	return xxx_messageInfo_MeshModelMaterial.Size(m)
}
func (m *MeshModelMaterial) XXX_DiscardUnknown() {
	xxx_messageInfo_MeshModelMaterial.DiscardUnknown(m)
}

var xxx_messageInfo_MeshModelMaterial proto.InternalMessageInfo

func (m *MeshModelMaterial) GetMaterialID() int32 {
	if m != nil && m.MaterialID != nil {
		return *m.MaterialID
	}
	return 0
}

func (m *MeshModelMaterial) GetMaterialTitle() string {
	if m != nil && m.MaterialTitle != nil {
		return *m.MaterialTitle
	}
	return ""
}

func (m *MeshModelMaterial) GetAmbientColor() *Vec3 {
	if m != nil {
		return m.AmbientColor
	}
	return nil
}

func (m *MeshModelMaterial) GetDiffuseColor() *Vec3 {
	if m != nil {
		return m.DiffuseColor
	}
	return nil
}

func (m *MeshModelMaterial) GetSpecularColor() *Vec3 {
	if m != nil {
		return m.SpecularColor
	}
	return nil
}

func (m *MeshModelMaterial) GetEmissionColor() *Vec3 {
	if m != nil {
		return m.EmissionColor
	}
	return nil
}

func (m *MeshModelMaterial) GetSpecularExp() float32 {
	if m != nil && m.SpecularExp != nil {
		return *m.SpecularExp
	}
	return 0
}

func (m *MeshModelMaterial) GetTransparency() float32 {
	if m != nil && m.Transparency != nil {
		return *m.Transparency
	}
	return 0
}

func (m *MeshModelMaterial) GetIlluminationMode() uint32 {
	if m != nil && m.IlluminationMode != nil {
		return *m.IlluminationMode
	}
	return 0
}

func (m *MeshModelMaterial) GetOpticalDensity() float32 {
	if m != nil && m.OpticalDensity != nil {
		return *m.OpticalDensity
	}
	return 0
}

func (m *MeshModelMaterial) GetTextureAmbient() *MeshMaterialTextureImage {
	if m != nil {
		return m.TextureAmbient
	}
	return nil
}

func (m *MeshModelMaterial) GetTextureDiffuse() *MeshMaterialTextureImage {
	if m != nil {
		return m.TextureDiffuse
	}
	return nil
}

func (m *MeshModelMaterial) GetTextureSpecular() *MeshMaterialTextureImage {
	if m != nil {
		return m.TextureSpecular
	}
	return nil
}

func (m *MeshModelMaterial) GetTextureSpecularExp() *MeshMaterialTextureImage {
	if m != nil {
		return m.TextureSpecularExp
	}
	return nil
}

func (m *MeshModelMaterial) GetTextureDissolve() *MeshMaterialTextureImage {
	if m != nil {
		return m.TextureDissolve
	}
	return nil
}

func (m *MeshModelMaterial) GetTextureBump() *MeshMaterialTextureImage {
	if m != nil {
		return m.TextureBump
	}
	return nil
}

func (m *MeshModelMaterial) GetTextureDisplacement() *MeshMaterialTextureImage {
	if m != nil {
		return m.TextureDisplacement
	}
	return nil
}

type Mesh struct {
	ID                      *int32             `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`
	File                    *string            `protobuf:"bytes,2,req,name=File" json:"File,omitempty"`
	FilePath                *string            `protobuf:"bytes,3,req,name=FilePath" json:"FilePath,omitempty"`
	ModelTitle              *string            `protobuf:"bytes,4,req,name=ModelTitle" json:"ModelTitle,omitempty"`
	MaterialTitle           *string            `protobuf:"bytes,5,req,name=MaterialTitle" json:"MaterialTitle,omitempty"`
	CountVertices           *int32             `protobuf:"varint,6,req,name=countVertices" json:"countVertices,omitempty"`
	CountTextureCoordinates *int32             `protobuf:"varint,7,req,name=countTextureCoordinates" json:"countTextureCoordinates,omitempty"`
	CountNormals            *int32             `protobuf:"varint,8,req,name=countNormals" json:"countNormals,omitempty"`
	CountIndices            *int32             `protobuf:"varint,9,req,name=countIndices" json:"countIndices,omitempty"`
	ModelMaterial           *MeshModelMaterial `protobuf:"bytes,10,req,name=ModelMaterial" json:"ModelMaterial,omitempty"`
	Vertices                []*Vec3            `protobuf:"bytes,11,rep,name=vertices" json:"vertices,omitempty"`
	TextureCoordinates      []*Vec2            `protobuf:"bytes,12,rep,name=texture_coordinates,json=textureCoordinates" json:"texture_coordinates,omitempty"`
	Normals                 []*Vec3            `protobuf:"bytes,13,rep,name=normals" json:"normals,omitempty"`
	Indices                 []uint32           `protobuf:"fixed32,14,rep,name=indices" json:"indices,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}           `json:"-"`
	XXX_unrecognized        []byte             `json:"-"`
	XXX_sizecache           int32              `json:"-"`
}

func (m *Mesh) Reset()         { *m = Mesh{} }
func (m *Mesh) String() string { return proto.CompactTextString(m) }
func (*Mesh) ProtoMessage()    {}
func (*Mesh) Descriptor() ([]byte, []int) {
	return fileDescriptor_caea9955171986a8, []int{7}
}

func (m *Mesh) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mesh.Unmarshal(m, b)
}
func (m *Mesh) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mesh.Marshal(b, m, deterministic)
}
func (m *Mesh) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mesh.Merge(m, src)
}
func (m *Mesh) XXX_Size() int {
	return xxx_messageInfo_Mesh.Size(m)
}
func (m *Mesh) XXX_DiscardUnknown() {
	xxx_messageInfo_Mesh.DiscardUnknown(m)
}

var xxx_messageInfo_Mesh proto.InternalMessageInfo

func (m *Mesh) GetID() int32 {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return 0
}

func (m *Mesh) GetFile() string {
	if m != nil && m.File != nil {
		return *m.File
	}
	return ""
}

func (m *Mesh) GetFilePath() string {
	if m != nil && m.FilePath != nil {
		return *m.FilePath
	}
	return ""
}

func (m *Mesh) GetModelTitle() string {
	if m != nil && m.ModelTitle != nil {
		return *m.ModelTitle
	}
	return ""
}

func (m *Mesh) GetMaterialTitle() string {
	if m != nil && m.MaterialTitle != nil {
		return *m.MaterialTitle
	}
	return ""
}

func (m *Mesh) GetCountVertices() int32 {
	if m != nil && m.CountVertices != nil {
		return *m.CountVertices
	}
	return 0
}

func (m *Mesh) GetCountTextureCoordinates() int32 {
	if m != nil && m.CountTextureCoordinates != nil {
		return *m.CountTextureCoordinates
	}
	return 0
}

func (m *Mesh) GetCountNormals() int32 {
	if m != nil && m.CountNormals != nil {
		return *m.CountNormals
	}
	return 0
}

func (m *Mesh) GetCountIndices() int32 {
	if m != nil && m.CountIndices != nil {
		return *m.CountIndices
	}
	return 0
}

func (m *Mesh) GetModelMaterial() *MeshModelMaterial {
	if m != nil {
		return m.ModelMaterial
	}
	return nil
}

func (m *Mesh) GetVertices() []*Vec3 {
	if m != nil {
		return m.Vertices
	}
	return nil
}

func (m *Mesh) GetTextureCoordinates() []*Vec2 {
	if m != nil {
		return m.TextureCoordinates
	}
	return nil
}

func (m *Mesh) GetNormals() []*Vec3 {
	if m != nil {
		return m.Normals
	}
	return nil
}

func (m *Mesh) GetIndices() []uint32 {
	if m != nil {
		return m.Indices
	}
	return nil
}

func init() {
	proto.RegisterType((*Vec2)(nil), "saveopen.Vec2")
	proto.RegisterType((*Vec3)(nil), "saveopen.Vec3")
	proto.RegisterType((*Vec4)(nil), "saveopen.Vec4")
	proto.RegisterType((*ObjectCoordinate)(nil), "saveopen.ObjectCoordinate")
	proto.RegisterType((*MaterialColor)(nil), "saveopen.MaterialColor")
	proto.RegisterType((*MeshMaterialTextureImage)(nil), "saveopen.MeshMaterialTextureImage")
	proto.RegisterType((*MeshModelMaterial)(nil), "saveopen.MeshModelMaterial")
	proto.RegisterType((*Mesh)(nil), "saveopen.Mesh")
}

func init() { proto.RegisterFile("KuplungDefinitions.proto", fileDescriptor_caea9955171986a8) }

var fileDescriptor_caea9955171986a8 = []byte{
	// 790 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xdd, 0x6e, 0x2b, 0x35,
	0x10, 0x56, 0x7e, 0xb6, 0x49, 0x26, 0x3f, 0xed, 0xf1, 0x41, 0x60, 0x81, 0x84, 0xa2, 0x55, 0x85,
	0xa2, 0x73, 0x51, 0xa1, 0x70, 0x2e, 0xb8, 0x02, 0x9d, 0x26, 0x45, 0x04, 0x28, 0xad, 0x4c, 0x28,
	0x97, 0xc8, 0xdd, 0xb8, 0xa9, 0x61, 0xd7, 0x5e, 0xad, 0xbd, 0x6d, 0xd2, 0xf7, 0xe0, 0x1d, 0x78,
	0x02, 0x5e, 0x8a, 0x97, 0x38, 0xb2, 0xd7, 0x9b, 0xec, 0x26, 0xdb, 0x2a, 0xbd, 0xdb, 0xef, 0xf3,
	0x7c, 0x9f, 0x67, 0xc6, 0x99, 0x09, 0xe0, 0x9f, 0xd3, 0x38, 0x4c, 0xc5, 0x72, 0xca, 0xee, 0xb8,
	0xe0, 0x9a, 0x4b, 0xa1, 0xce, 0xe2, 0x44, 0x6a, 0x89, 0xda, 0x8a, 0x3e, 0x30, 0x19, 0x33, 0xe1,
	0xfb, 0xd0, 0xbc, 0x61, 0xc1, 0x18, 0xf5, 0xa0, 0xb6, 0xc2, 0xb5, 0x61, 0x7d, 0x54, 0x27, 0xb5,
	0x95, 0x41, 0x6b, 0x5c, 0xcf, 0xd0, 0xda, 0xff, 0xda, 0xc6, 0x7c, 0xf3, 0x52, 0x8c, 0x41, 0x4f,
	0xb8, 0x91, 0xa1, 0x27, 0xff, 0x3b, 0xab, 0x78, 0x7f, 0xb8, 0xc2, 0xa0, 0x47, 0xdc, 0xcc, 0xd0,
	0xa3, 0x7f, 0x0e, 0x27, 0x57, 0xb7, 0x7f, 0xb1, 0x40, 0x4f, 0xa4, 0x4c, 0x16, 0x5c, 0x50, 0xcd,
	0x10, 0x86, 0x16, 0x15, 0x3c, 0xa2, 0x9a, 0x59, 0xc7, 0x36, 0xc9, 0x21, 0xfa, 0x04, 0xbc, 0x58,
	0x72, 0xa1, 0x9d, 0x77, 0x06, 0xfc, 0x7f, 0x6a, 0xd0, 0xbf, 0xa4, 0x9a, 0x25, 0x9c, 0x86, 0x13,
	0x19, 0xca, 0x04, 0x8d, 0xe0, 0x38, 0x30, 0x1f, 0xd7, 0x3c, 0xf8, 0x9b, 0x25, 0x57, 0x31, 0x13,
	0xce, 0x69, 0x97, 0x2e, 0xde, 0x55, 0x2f, 0xdf, 0xf5, 0x39, 0xb4, 0x95, 0x4e, 0x98, 0x58, 0xea,
	0x7b, 0x97, 0xfc, 0x06, 0xa3, 0x53, 0xf0, 0xac, 0x91, 0xad, 0xa3, 0x3b, 0x1e, 0x9c, 0xe5, 0x5d,
	0x3e, 0x33, 0xed, 0x23, 0xd9, 0xa1, 0xff, 0x5f, 0x0d, 0xf0, 0x25, 0x53, 0xf7, 0x79, 0x6e, 0x73,
	0xb6, 0xd2, 0x69, 0xc2, 0x66, 0x11, 0x5d, 0x5a, 0xfb, 0x1f, 0x78, 0xc8, 0x04, 0x8d, 0xb2, 0x2a,
	0x3b, 0x64, 0x83, 0x4d, 0x99, 0x36, 0xc8, 0xa6, 0xd4, 0x21, 0x19, 0x30, 0xec, 0x1f, 0x7c, 0xe1,
	0xb2, 0xf1, 0x48, 0x06, 0xd0, 0xa7, 0x70, 0xf4, 0x23, 0xe3, 0xcb, 0x7b, 0x6d, 0x73, 0xf1, 0x88,
	0x43, 0xe8, 0x4b, 0x80, 0xdf, 0x15, 0x73, 0x57, 0x62, 0xcf, 0xd6, 0x56, 0x60, 0xcc, 0xfd, 0x13,
	0x19, 0x45, 0x54, 0x2c, 0x14, 0x3e, 0x1a, 0x36, 0xcc, 0xfd, 0x39, 0xf6, 0xff, 0x6f, 0xc1, 0x1b,
	0x9b, 0xb8, 0x5c, 0xb0, 0x30, 0xcf, 0xde, 0x38, 0xe6, 0xdf, 0xb3, 0xa9, 0xcd, 0xd9, 0x23, 0x05,
	0x06, 0x9d, 0x6e, 0x5f, 0x61, 0xce, 0x75, 0x98, 0x67, 0x5f, 0x26, 0xd1, 0x18, 0x7a, 0x1f, 0xa2,
	0x5b, 0xce, 0x84, 0xb6, 0x4f, 0x65, 0x8b, 0xd9, 0xef, 0x60, 0x29, 0xc6, 0x68, 0xa6, 0xfc, 0xee,
	0x2e, 0x55, 0x6c, 0xf2, 0x42, 0xd7, 0x4b, 0x31, 0xe8, 0x3d, 0xf4, 0x7f, 0x8b, 0x59, 0x90, 0x86,
	0x34, 0xc9, 0x44, 0x5e, 0xa5, 0xa8, 0x1c, 0x64, 0x54, 0x17, 0x11, 0x57, 0x8a, 0x4b, 0x91, 0xa9,
	0x8e, 0xaa, 0x55, 0xa5, 0x20, 0x34, 0x84, 0x6e, 0x6e, 0x73, 0xb1, 0x8a, 0x71, 0xcb, 0xfe, 0x5a,
	0x8a, 0x14, 0xf2, 0xa1, 0x37, 0x4f, 0xa8, 0x50, 0x31, 0x4d, 0x98, 0x08, 0xd6, 0xb8, 0x6d, 0x43,
	0x4a, 0x1c, 0x7a, 0x07, 0x27, 0xb3, 0x30, 0x4c, 0x23, 0x33, 0x04, 0x5c, 0x0a, 0xd3, 0x7c, 0xdc,
	0x19, 0xd6, 0x47, 0x2d, 0xb2, 0xc7, 0xa3, 0xaf, 0x60, 0x70, 0x15, 0x6b, 0x1e, 0xd0, 0x70, 0xca,
	0x84, 0xe2, 0x7a, 0x8d, 0xc1, 0x3a, 0xee, 0xb0, 0xe8, 0x27, 0x18, 0xb8, 0x07, 0x77, 0x0d, 0xc5,
	0x5d, 0x5b, 0x90, 0xbf, 0x2d, 0xe8, 0xb9, 0x5f, 0x28, 0xd9, 0x51, 0x16, 0xbc, 0x5c, 0xa3, 0x71,
	0xef, 0xd5, 0x5e, 0x4e, 0x89, 0x7e, 0x81, 0x63, 0xc7, 0xe4, 0x5d, 0xc2, 0xfd, 0x83, 0xcd, 0x76,
	0xa5, 0x88, 0x00, 0xda, 0xa1, 0xcc, 0x33, 0x0c, 0x0e, 0x36, 0xac, 0x50, 0x17, 0x32, 0x9c, 0x72,
	0xa5, 0x64, 0xf8, 0xc0, 0xf0, 0xf1, 0xab, 0x33, 0xcc, 0xa5, 0x68, 0x0a, 0x5d, 0x47, 0x9d, 0xa7,
	0x51, 0x8c, 0x4f, 0x0e, 0x76, 0x2a, 0xca, 0xd0, 0x1c, 0xde, 0x6e, 0x8d, 0xe3, 0x90, 0x06, 0x2c,
	0x32, 0x4f, 0xfa, 0xe6, 0x60, 0xb7, 0x2a, 0xb9, 0xff, 0x6f, 0x13, 0x9a, 0x46, 0x81, 0x06, 0x50,
	0xdf, 0x0c, 0x76, 0x7d, 0x36, 0x45, 0x08, 0x9a, 0x66, 0x25, 0xb9, 0x39, 0xb6, 0xdf, 0xf9, 0xda,
	0xba, 0xa6, 0x6e, 0x0f, 0xb9, 0xb5, 0x65, 0xb0, 0x5d, 0x10, 0x66, 0x63, 0x64, 0xd3, 0xdf, 0xb4,
	0xa7, 0x05, 0x66, 0x7f, 0x41, 0x78, 0x55, 0x0b, 0xe2, 0x14, 0xfa, 0x81, 0x4c, 0x85, 0xbe, 0x61,
	0x89, 0xe6, 0x01, 0x53, 0x76, 0x04, 0x3d, 0x52, 0x26, 0xd1, 0xb7, 0xf0, 0x99, 0x25, 0x5c, 0x41,
	0xdb, 0x7f, 0x0f, 0x65, 0xc7, 0xcf, 0x23, 0xcf, 0x1d, 0x9b, 0x51, 0xb4, 0x47, 0xbf, 0xca, 0x24,
	0xa2, 0xa1, 0xb2, 0xa3, 0xe8, 0x91, 0x12, 0xb7, 0x89, 0x99, 0x89, 0x85, 0x4d, 0xa1, 0x53, 0x88,
	0x71, 0x1c, 0xfa, 0x00, 0xfd, 0xd2, 0x7e, 0xb4, 0x13, 0xd8, 0x1d, 0x7f, 0xb1, 0xf3, 0x0c, 0xc5,
	0x10, 0x52, 0x56, 0xa0, 0x77, 0xd0, 0x7e, 0xc8, 0xab, 0xec, 0x0e, 0x1b, 0x15, 0x8b, 0x66, 0x73,
	0x8e, 0xbe, 0x87, 0xb7, 0x3a, 0x2b, 0xe6, 0xcf, 0xa0, 0x50, 0x6c, 0xaf, 0x42, 0x36, 0x26, 0x48,
	0xef, 0xd7, 0x3d, 0x82, 0x96, 0x70, 0x25, 0xf7, 0x2b, 0xef, 0xca, 0x8f, 0xcd, 0x7f, 0x22, 0x77,
	0x85, 0x0f, 0x86, 0x8d, 0x51, 0x8b, 0xe4, 0xf0, 0x63, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4b, 0xa7,
	0x73, 0xac, 0x68, 0x08, 0x00, 0x00,
}
